Terminals unused in grammar

   LIGNORE


Grammar

    0 $accept: file $end

    1 file: loadsys package imports xdcl_list

    2 package: /* empty */
    3        | LPACKAGE sym ';'

    4 $@1: /* empty */

    5 loadsys: $@1 import_package import_there

    6 imports: /* empty */
    7        | imports import ';'

    8 import: LIMPORT import_stmt
    9       | LIMPORT '(' import_stmt_list osemi ')'
   10       | LIMPORT '(' ')'

   11 import_stmt: import_here import_package import_there

   12 import_stmt_list: import_stmt
   13                 | import_stmt_list ';' import_stmt

   14 import_here: LLITERAL
   15            | sym LLITERAL
   16            | '.' LLITERAL

   17 import_package: LPACKAGE LNAME import_safety ';'

   18 import_safety: /* empty */
   19              | LNAME

   20 $@2: /* empty */

   21 import_there: $@2 hidden_import_list '$' '$'

   22 xdcl: /* empty */
   23     | common_dcl
   24     | xfndcl
   25     | non_dcl_stmt
   26     | error

   27 common_dcl: LVAR vardcl
   28           | LVAR '(' vardcl_list osemi ')'
   29           | LVAR '(' ')'
   30           | lconst constdcl
   31           | lconst '(' constdcl osemi ')'
   32           | lconst '(' constdcl ';' constdcl_list osemi ')'
   33           | lconst '(' ')'
   34           | LTYPE typedcl
   35           | LTYPE '(' typedcl_list osemi ')'
   36           | LTYPE '(' ')'

   37 lconst: LCONST

   38 vardcl: dcl_name_list ntype
   39       | dcl_name_list ntype '=' expr_list
   40       | dcl_name_list '=' expr_list

   41 constdcl: dcl_name_list ntype '=' expr_list
   42         | dcl_name_list '=' expr_list

   43 constdcl1: constdcl
   44          | dcl_name_list ntype
   45          | dcl_name_list

   46 typedclname: sym

   47 typedcl: typedclname ntype

   48 simple_stmt: expr
   49            | expr LASOP expr
   50            | expr_list '=' expr_list
   51            | expr_list LCOLAS expr_list
   52            | expr LINC
   53            | expr LDEC

   54 case: LCASE expr_or_type_list ':'
   55     | LCASE expr_or_type_list '=' expr ':'
   56     | LCASE expr_or_type_list LCOLAS expr ':'
   57     | LDEFAULT ':'

   58 $@3: /* empty */

   59 compound_stmt: '{' $@3 stmt_list '}'

   60 $@4: /* empty */

   61 caseblock: case $@4 stmt_list

   62 caseblock_list: /* empty */
   63               | caseblock_list caseblock

   64 $@5: /* empty */

   65 loop_body: LBODY $@5 stmt_list '}'

   66 range_stmt: expr_list '=' LRANGE expr
   67           | expr_list LCOLAS LRANGE expr

   68 for_header: osimple_stmt ';' osimple_stmt ';' osimple_stmt
   69           | osimple_stmt
   70           | range_stmt

   71 for_body: for_header loop_body

   72 $@6: /* empty */

   73 for_stmt: LFOR $@6 for_body

   74 if_header: osimple_stmt
   75          | osimple_stmt ';' osimple_stmt

   76 $@7: /* empty */

   77 $@8: /* empty */

   78 $@9: /* empty */

   79 if_stmt: LIF $@7 if_header $@8 loop_body $@9 else

   80 else: /* empty */
   81     | LELSE if_stmt
   82     | LELSE compound_stmt

   83 $@10: /* empty */

   84 $@11: /* empty */

   85 switch_stmt: LSWITCH $@10 if_header $@11 LBODY caseblock_list '}'

   86 $@12: /* empty */

   87 select_stmt: LSELECT $@12 LBODY caseblock_list '}'

   88 expr: uexpr
   89     | expr LOROR expr
   90     | expr LANDAND expr
   91     | expr LEQ expr
   92     | expr LNE expr
   93     | expr LLT expr
   94     | expr LLE expr
   95     | expr LGE expr
   96     | expr LGT expr
   97     | expr '+' expr
   98     | expr '-' expr
   99     | expr '|' expr
  100     | expr '^' expr
  101     | expr '*' expr
  102     | expr '/' expr
  103     | expr '%' expr
  104     | expr '&' expr
  105     | expr LANDNOT expr
  106     | expr LLSH expr
  107     | expr LRSH expr
  108     | expr LCOMM expr

  109 uexpr: pexpr
  110      | '*' uexpr
  111      | '&' uexpr
  112      | '+' uexpr
  113      | '-' uexpr
  114      | '!' uexpr
  115      | '~' uexpr
  116      | '^' uexpr
  117      | LCOMM uexpr

  118 pseudocall: pexpr '(' ')'
  119           | pexpr '(' expr_or_type_list ocomma ')'
  120           | pexpr '(' expr_or_type_list LDDD ocomma ')'

  121 pexpr_no_paren: LLITERAL
  122               | name
  123               | pexpr '.' sym
  124               | pexpr '.' '(' expr_or_type ')'
  125               | pexpr '.' '(' LTYPE ')'
  126               | pexpr '[' expr ']'
  127               | pexpr '[' oexpr ':' oexpr ']'
  128               | pseudocall
  129               | convtype '(' expr ')'
  130               | comptype lbrace start_complit braced_keyval_list '}'
  131               | pexpr_no_paren '{' start_complit braced_keyval_list '}'
  132               | '(' expr_or_type ')' '{' start_complit braced_keyval_list '}'
  133               | fnliteral

  134 start_complit: /* empty */

  135 keyval: expr ':' complitexpr

  136 complitexpr: expr
  137            | '{' start_complit braced_keyval_list '}'

  138 pexpr: pexpr_no_paren
  139      | '(' expr_or_type ')'

  140 expr_or_type: expr
  141             | non_expr_type

  142 name_or_type: ntype

  143 lbrace: LBODY
  144       | '{'

  145 new_name: sym

  146 dcl_name: sym

  147 onew_name: /* empty */
  148          | new_name

  149 sym: LNAME
  150    | hidden_importsym
  151    | '?'

  152 hidden_importsym: '@' LLITERAL '.' LNAME

  153 name: sym

  154 labelname: new_name

  155 dotdotdot: LDDD
  156          | LDDD ntype

  157 ntype: recvchantype
  158      | fntype
  159      | othertype
  160      | ptrtype
  161      | dotname
  162      | '(' ntype ')'

  163 non_expr_type: recvchantype
  164              | fntype
  165              | othertype
  166              | '*' non_expr_type

  167 non_recvchantype: fntype
  168                 | othertype
  169                 | ptrtype
  170                 | dotname
  171                 | '(' ntype ')'

  172 convtype: fntype
  173         | othertype

  174 comptype: othertype

  175 fnret_type: recvchantype
  176           | fntype
  177           | othertype
  178           | ptrtype
  179           | dotname

  180 dotname: name
  181        | name '.' sym

  182 othertype: '[' oexpr ']' ntype
  183          | '[' LDDD ']' ntype
  184          | LCHAN non_recvchantype
  185          | LCHAN LCOMM ntype
  186          | LMAP '[' ntype ']' ntype
  187          | structtype
  188          | interfacetype

  189 ptrtype: '*' ntype

  190 recvchantype: LCOMM LCHAN ntype

  191 structtype: LSTRUCT lbrace structdcl_list osemi '}'
  192           | LSTRUCT lbrace '}'

  193 interfacetype: LINTERFACE lbrace interfacedcl_list osemi '}'
  194              | LINTERFACE lbrace '}'

  195 xfndcl: LFUNC fndcl fnbody

  196 fndcl: sym '(' oarg_type_list_ocomma ')' fnres
  197      | '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres

  198 hidden_fndcl: hidden_pkg_importsym '(' ohidden_funarg_list ')' ohidden_funres
  199             | '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres

  200 fntype: LFUNC '(' oarg_type_list_ocomma ')' fnres

  201 fnbody: /* empty */
  202       | '{' stmt_list '}'

  203 fnres: /* empty */
  204      | fnret_type
  205      | '(' oarg_type_list_ocomma ')'

  206 fnlitdcl: fntype

  207 fnliteral: fnlitdcl lbrace stmt_list '}'
  208          | fnlitdcl error

  209 xdcl_list: /* empty */
  210          | xdcl_list xdcl ';'

  211 vardcl_list: vardcl
  212            | vardcl_list ';' vardcl

  213 constdcl_list: constdcl1
  214              | constdcl_list ';' constdcl1

  215 typedcl_list: typedcl
  216             | typedcl_list ';' typedcl

  217 structdcl_list: structdcl
  218               | structdcl_list ';' structdcl

  219 interfacedcl_list: interfacedcl
  220                  | interfacedcl_list ';' interfacedcl

  221 structdcl: new_name_list ntype oliteral
  222          | embed oliteral
  223          | '(' embed ')' oliteral
  224          | '*' embed oliteral
  225          | '(' '*' embed ')' oliteral
  226          | '*' '(' embed ')' oliteral

  227 packname: LNAME
  228         | LNAME '.' sym

  229 embed: packname

  230 interfacedcl: new_name indcl
  231             | packname
  232             | '(' packname ')'

  233 indcl: '(' oarg_type_list_ocomma ')' fnres

  234 arg_type: name_or_type
  235         | sym name_or_type
  236         | sym dotdotdot
  237         | dotdotdot

  238 arg_type_list: arg_type
  239              | arg_type_list ',' arg_type

  240 oarg_type_list_ocomma: /* empty */
  241                      | arg_type_list ocomma

  242 stmt: /* empty */
  243     | compound_stmt
  244     | common_dcl
  245     | non_dcl_stmt
  246     | error

  247 non_dcl_stmt: simple_stmt
  248             | for_stmt
  249             | switch_stmt
  250             | select_stmt
  251             | if_stmt

  252 $@13: /* empty */

  253 non_dcl_stmt: labelname ':' $@13 stmt
  254             | LFALL
  255             | LBREAK onew_name
  256             | LCONTINUE onew_name
  257             | LGO pseudocall
  258             | LDEFER pseudocall
  259             | LGOTO new_name
  260             | LRETURN oexpr_list

  261 stmt_list: stmt
  262          | stmt_list ';' stmt

  263 new_name_list: new_name
  264              | new_name_list ',' new_name

  265 dcl_name_list: dcl_name
  266              | dcl_name_list ',' dcl_name

  267 expr_list: expr
  268          | expr_list ',' expr

  269 expr_or_type_list: expr_or_type
  270                  | expr_or_type_list ',' expr_or_type

  271 keyval_list: keyval
  272            | complitexpr
  273            | keyval_list ',' keyval
  274            | keyval_list ',' complitexpr

  275 braced_keyval_list: /* empty */
  276                   | keyval_list ocomma

  277 osemi: /* empty */
  278      | ';'

  279 ocomma: /* empty */
  280       | ','

  281 oexpr: /* empty */
  282      | expr

  283 oexpr_list: /* empty */
  284           | expr_list

  285 osimple_stmt: /* empty */
  286             | simple_stmt

  287 ohidden_funarg_list: /* empty */
  288                    | hidden_funarg_list

  289 ohidden_structdcl_list: /* empty */
  290                       | hidden_structdcl_list

  291 ohidden_interfacedcl_list: /* empty */
  292                          | hidden_interfacedcl_list

  293 oliteral: /* empty */
  294         | LLITERAL

  295 hidden_import: LIMPORT LNAME LLITERAL ';'
  296              | LVAR hidden_pkg_importsym hidden_type ';'
  297              | LCONST hidden_pkg_importsym '=' hidden_constant ';'
  298              | LCONST hidden_pkg_importsym hidden_type '=' hidden_constant ';'
  299              | LTYPE hidden_pkgtype hidden_type ';'
  300              | LFUNC hidden_fndcl fnbody ';'

  301 hidden_pkg_importsym: hidden_importsym

  302 hidden_pkgtype: hidden_pkg_importsym

  303 hidden_type: hidden_type_misc
  304            | hidden_type_recv_chan
  305            | hidden_type_func

  306 hidden_type_non_recv_chan: hidden_type_misc
  307                          | hidden_type_func

  308 hidden_type_misc: hidden_importsym
  309                 | LNAME
  310                 | '[' ']' hidden_type
  311                 | '[' LLITERAL ']' hidden_type
  312                 | LMAP '[' hidden_type ']' hidden_type
  313                 | LSTRUCT '{' ohidden_structdcl_list '}'
  314                 | LINTERFACE '{' ohidden_interfacedcl_list '}'
  315                 | '*' hidden_type
  316                 | LCHAN hidden_type_non_recv_chan
  317                 | LCHAN '(' hidden_type_recv_chan ')'
  318                 | LCHAN LCOMM hidden_type

  319 hidden_type_recv_chan: LCOMM LCHAN hidden_type

  320 hidden_type_func: LFUNC '(' ohidden_funarg_list ')' ohidden_funres

  321 hidden_funarg: sym hidden_type oliteral
  322              | sym LDDD hidden_type oliteral

  323 hidden_structdcl: sym hidden_type oliteral

  324 hidden_interfacedcl: sym '(' ohidden_funarg_list ')' ohidden_funres
  325                    | hidden_type

  326 ohidden_funres: /* empty */
  327               | hidden_funres

  328 hidden_funres: '(' ohidden_funarg_list ')'
  329              | hidden_type

  330 hidden_literal: LLITERAL
  331               | '-' LLITERAL
  332               | sym

  333 hidden_constant: hidden_literal
  334                | '(' hidden_literal '+' hidden_literal ')'

  335 hidden_import_list: /* empty */
  336                   | hidden_import_list hidden_import

  337 hidden_funarg_list: hidden_funarg
  338                   | hidden_funarg_list ',' hidden_funarg

  339 hidden_structdcl_list: hidden_structdcl
  340                      | hidden_structdcl_list ';' hidden_structdcl

  341 hidden_interfacedcl_list: hidden_interfacedcl
  342                         | hidden_interfacedcl_list ';' hidden_interfacedcl


Terminals, with rules where they appear

$end (0) 0
'!' (33) 114
'$' (36) 21
'%' (37) 103
'&' (38) 104 111
'(' (40) 9 10 28 29 31 32 33 35 36 118 119 120 124 125 129 132 139
    162 171 196 197 198 199 200 205 223 225 226 232 233 317 320 324
    328 334
')' (41) 9 10 28 29 31 32 33 35 36 118 119 120 124 125 129 132 139
    162 171 196 197 198 199 200 205 223 225 226 232 233 317 320 324
    328 334
'*' (42) 101 110 166 189 224 225 226 315
'+' (43) 97 112 334
',' (44) 239 264 266 268 270 273 274 280 338
'-' (45) 98 113 331
'.' (46) 16 123 124 125 152 181 228
'/' (47) 102
':' (58) 54 55 56 57 127 135 253
';' (59) 3 7 13 17 32 68 75 210 212 214 216 218 220 262 278 295 296
    297 298 299 300 340 342
'=' (61) 39 40 41 42 50 55 66 297 298
'?' (63) 151
'@' (64) 152
'[' (91) 126 127 182 183 186 310 311 312
']' (93) 126 127 182 183 186 310 311 312
'^' (94) 100 116
'{' (123) 59 131 132 137 144 202 313 314
'|' (124) 99
'}' (125) 59 65 85 87 130 131 132 137 191 192 193 194 202 207 313 314
'~' (126) 115
error (256) 26 208 246
LLITERAL (258) 14 15 16 121 152 294 295 311 330 331
LASOP (259) 49
LBREAK (260) 255
LCASE (261) 54 55 56
LCHAN (262) 184 185 190 316 317 318 319
LCOLAS (263) 51 56 67
LCONST (264) 37 297 298
LCONTINUE (265) 256
LDDD (266) 120 155 156 183 322
LDEFAULT (267) 57
LDEFER (268) 258
LELSE (269) 81 82
LFALL (270) 254
LFOR (271) 73
LFUNC (272) 195 200 300 320
LGO (273) 257
LGOTO (274) 259
LIF (275) 79
LIMPORT (276) 8 9 10 295
LINTERFACE (277) 193 194 314
LMAP (278) 186 312
LNAME (279) 17 19 149 152 227 228 295 309
LPACKAGE (280) 3 17
LRANGE (281) 66 67
LRETURN (282) 260
LSELECT (283) 87
LSTRUCT (284) 191 192 313
LSWITCH (285) 85
LTYPE (286) 34 35 36 125 299
LVAR (287) 27 28 29 296
LANDAND (288) 90
LANDNOT (289) 105
LBODY (290) 65 85 87 143
LCOMM (291) 108 117 185 190 318 319
LDEC (292) 53
LEQ (293) 91
LGE (294) 95
LGT (295) 96
LIGNORE (296)
LINC (297) 52
LLE (298) 94
LLSH (299) 106
LLT (300) 93
LNE (301) 92
LOROR (302) 89
LRSH (303) 107
NotPackage (304)
NotParen (305)
PreferToRightParen (306)


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
file (77)
    on left: 1, on right: 0
package (78)
    on left: 2 3, on right: 1
loadsys (79)
    on left: 5, on right: 1
$@1 (80)
    on left: 4, on right: 5
imports (81)
    on left: 6 7, on right: 1 7
import (82)
    on left: 8 9 10, on right: 7
import_stmt (83)
    on left: 11, on right: 8 12 13
import_stmt_list (84)
    on left: 12 13, on right: 9 13
import_here (85)
    on left: 14 15 16, on right: 11
import_package (86)
    on left: 17, on right: 5 11
import_safety (87)
    on left: 18 19, on right: 17
import_there (88)
    on left: 21, on right: 5 11
$@2 (89)
    on left: 20, on right: 21
xdcl (90)
    on left: 22 23 24 25 26, on right: 210
common_dcl (91)
    on left: 27 28 29 30 31 32 33 34 35 36, on right: 23 244
lconst (92)
    on left: 37, on right: 30 31 32 33
vardcl (93)
    on left: 38 39 40, on right: 27 211 212
constdcl (94)
    on left: 41 42, on right: 30 31 32 43
constdcl1 (95)
    on left: 43 44 45, on right: 213 214
typedclname (96)
    on left: 46, on right: 47
typedcl (97)
    on left: 47, on right: 34 215 216
simple_stmt (98)
    on left: 48 49 50 51 52 53, on right: 247 286
case (99)
    on left: 54 55 56 57, on right: 61
compound_stmt (100)
    on left: 59, on right: 82 243
$@3 (101)
    on left: 58, on right: 59
caseblock (102)
    on left: 61, on right: 63
$@4 (103)
    on left: 60, on right: 61
caseblock_list (104)
    on left: 62 63, on right: 63 85 87
loop_body (105)
    on left: 65, on right: 71 79
$@5 (106)
    on left: 64, on right: 65
range_stmt (107)
    on left: 66 67, on right: 70
for_header (108)
    on left: 68 69 70, on right: 71
for_body (109)
    on left: 71, on right: 73
for_stmt (110)
    on left: 73, on right: 248
$@6 (111)
    on left: 72, on right: 73
if_header (112)
    on left: 74 75, on right: 79 85
if_stmt (113)
    on left: 79, on right: 81 251
$@7 (114)
    on left: 76, on right: 79
$@8 (115)
    on left: 77, on right: 79
$@9 (116)
    on left: 78, on right: 79
else (117)
    on left: 80 81 82, on right: 79
switch_stmt (118)
    on left: 85, on right: 249
$@10 (119)
    on left: 83, on right: 85
$@11 (120)
    on left: 84, on right: 85
select_stmt (121)
    on left: 87, on right: 250
$@12 (122)
    on left: 86, on right: 87
expr (123)
    on left: 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
    105 106 107 108, on right: 48 49 52 53 55 56 66 67 89 90 91 92
    93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 126 129
    135 136 140 267 268 282
uexpr (124)
    on left: 109 110 111 112 113 114 115 116 117, on right: 88 110
    111 112 113 114 115 116 117
pseudocall (125)
    on left: 118 119 120, on right: 128 257 258
pexpr_no_paren (126)
    on left: 121 122 123 124 125 126 127 128 129 130 131 132 133, on right:
    131 138
start_complit (127)
    on left: 134, on right: 130 131 132 137
keyval (128)
    on left: 135, on right: 271 273
complitexpr (129)
    on left: 136 137, on right: 135 272 274
pexpr (130)
    on left: 138 139, on right: 109 118 119 120 123 124 125 126 127
expr_or_type (131)
    on left: 140 141, on right: 124 132 139 269 270
name_or_type (132)
    on left: 142, on right: 234 235
lbrace (133)
    on left: 143 144, on right: 130 191 192 193 194 207
new_name (134)
    on left: 145, on right: 148 154 230 259 263 264
dcl_name (135)
    on left: 146, on right: 265 266
onew_name (136)
    on left: 147 148, on right: 255 256
sym (137)
    on left: 149 150 151, on right: 3 15 46 123 145 146 153 181 196
    197 199 228 235 236 321 322 323 324 332
hidden_importsym (138)
    on left: 152, on right: 150 301 308
name (139)
    on left: 153, on right: 122 180 181
labelname (140)
    on left: 154, on right: 253
dotdotdot (141)
    on left: 155 156, on right: 236 237
ntype (142)
    on left: 157 158 159 160 161 162, on right: 38 39 41 44 47 142
    156 162 171 182 183 185 186 189 190 221
non_expr_type (143)
    on left: 163 164 165 166, on right: 141 166
non_recvchantype (144)
    on left: 167 168 169 170 171, on right: 184
convtype (145)
    on left: 172 173, on right: 129
comptype (146)
    on left: 174, on right: 130
fnret_type (147)
    on left: 175 176 177 178 179, on right: 204
dotname (148)
    on left: 180 181, on right: 161 170 179
othertype (149)
    on left: 182 183 184 185 186 187 188, on right: 159 165 168 173
    174 177
ptrtype (150)
    on left: 189, on right: 160 169 178
recvchantype (151)
    on left: 190, on right: 157 163 175
structtype (152)
    on left: 191 192, on right: 187
interfacetype (153)
    on left: 193 194, on right: 188
xfndcl (154)
    on left: 195, on right: 24
fndcl (155)
    on left: 196 197, on right: 195
hidden_fndcl (156)
    on left: 198 199, on right: 300
fntype (157)
    on left: 200, on right: 158 164 167 172 176 206
fnbody (158)
    on left: 201 202, on right: 195 300
fnres (159)
    on left: 203 204 205, on right: 196 197 200 233
fnlitdcl (160)
    on left: 206, on right: 207 208
fnliteral (161)
    on left: 207 208, on right: 133
xdcl_list (162)
    on left: 209 210, on right: 1 210
vardcl_list (163)
    on left: 211 212, on right: 28 212
constdcl_list (164)
    on left: 213 214, on right: 32 214
typedcl_list (165)
    on left: 215 216, on right: 35 216
structdcl_list (166)
    on left: 217 218, on right: 191 218
interfacedcl_list (167)
    on left: 219 220, on right: 193 220
structdcl (168)
    on left: 221 222 223 224 225 226, on right: 217 218
packname (169)
    on left: 227 228, on right: 229 231 232
embed (170)
    on left: 229, on right: 222 223 224 225 226
interfacedcl (171)
    on left: 230 231 232, on right: 219 220
indcl (172)
    on left: 233, on right: 230
arg_type (173)
    on left: 234 235 236 237, on right: 238 239
arg_type_list (174)
    on left: 238 239, on right: 239 241
oarg_type_list_ocomma (175)
    on left: 240 241, on right: 196 197 200 205 233
stmt (176)
    on left: 242 243 244 245 246, on right: 253 261 262
non_dcl_stmt (177)
    on left: 247 248 249 250 251 253 254 255 256 257 258 259 260, on right:
    25 245
$@13 (178)
    on left: 252, on right: 253
stmt_list (179)
    on left: 261 262, on right: 59 61 65 202 207 262
new_name_list (180)
    on left: 263 264, on right: 221 264
dcl_name_list (181)
    on left: 265 266, on right: 38 39 40 41 42 44 45 266
expr_list (182)
    on left: 267 268, on right: 39 40 41 42 50 51 66 67 268 284
expr_or_type_list (183)
    on left: 269 270, on right: 54 55 56 119 120 270
keyval_list (184)
    on left: 271 272 273 274, on right: 273 274 276
braced_keyval_list (185)
    on left: 275 276, on right: 130 131 132 137
osemi (186)
    on left: 277 278, on right: 9 28 31 32 35 191 193
ocomma (187)
    on left: 279 280, on right: 119 120 241 276
oexpr (188)
    on left: 281 282, on right: 127 182
oexpr_list (189)
    on left: 283 284, on right: 260
osimple_stmt (190)
    on left: 285 286, on right: 68 69 74 75
ohidden_funarg_list (191)
    on left: 287 288, on right: 198 199 320 324 328
ohidden_structdcl_list (192)
    on left: 289 290, on right: 313
ohidden_interfacedcl_list (193)
    on left: 291 292, on right: 314
oliteral (194)
    on left: 293 294, on right: 221 222 223 224 225 226 321 322 323
hidden_import (195)
    on left: 295 296 297 298 299 300, on right: 336
hidden_pkg_importsym (196)
    on left: 301, on right: 198 296 297 298 302
hidden_pkgtype (197)
    on left: 302, on right: 299
hidden_type (198)
    on left: 303 304 305, on right: 296 298 299 310 311 312 315 318
    319 321 322 323 325 329
hidden_type_non_recv_chan (199)
    on left: 306 307, on right: 316
hidden_type_misc (200)
    on left: 308 309 310 311 312 313 314 315 316 317 318, on right:
    303 306
hidden_type_recv_chan (201)
    on left: 319, on right: 304 317
hidden_type_func (202)
    on left: 320, on right: 305 307
hidden_funarg (203)
    on left: 321 322, on right: 337 338
hidden_structdcl (204)
    on left: 323, on right: 339 340
hidden_interfacedcl (205)
    on left: 324 325, on right: 341 342
ohidden_funres (206)
    on left: 326 327, on right: 198 199 320 324
hidden_funres (207)
    on left: 328 329, on right: 327
hidden_literal (208)
    on left: 330 331 332, on right: 333 334
hidden_constant (209)
    on left: 333 334, on right: 297 298
hidden_import_list (210)
    on left: 335 336, on right: 21 336
hidden_funarg_list (211)
    on left: 337 338, on right: 199 288 338
hidden_structdcl_list (212)
    on left: 339 340, on right: 290 340
hidden_interfacedcl_list (213)
    on left: 341 342, on right: 292 342


state 0

    0 $accept: . file $end

    $default  reduce using rule 4 ($@1)

    file     go to state 1
    loadsys  go to state 2
    $@1      go to state 3


state 1

    0 $accept: file . $end

    $end  shift, and go to state 4


state 2

    1 file: loadsys . package imports xdcl_list

    LPACKAGE  shift, and go to state 5

    $default  reduce using rule 2 (package)

    package  go to state 6


state 3

    5 loadsys: $@1 . import_package import_there

    LPACKAGE  shift, and go to state 7

    import_package  go to state 8


state 4

    0 $accept: file $end .

    $default  accept


state 5

    3 package: LPACKAGE . sym ';'

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    sym               go to state 12
    hidden_importsym  go to state 13


state 6

    1 file: loadsys package . imports xdcl_list

    $default  reduce using rule 6 (imports)

    imports  go to state 14


state 7

   17 import_package: LPACKAGE . LNAME import_safety ';'

    LNAME  shift, and go to state 15


state 8

    5 loadsys: $@1 import_package . import_there

    $default  reduce using rule 20 ($@2)

    import_there  go to state 16
    $@2           go to state 17


state 9

  149 sym: LNAME .

    $default  reduce using rule 149 (sym)


state 10

  151 sym: '?' .

    $default  reduce using rule 151 (sym)


state 11

  152 hidden_importsym: '@' . LLITERAL '.' LNAME

    LLITERAL  shift, and go to state 18


state 12

    3 package: LPACKAGE sym . ';'

    ';'  shift, and go to state 19


state 13

  150 sym: hidden_importsym .

    $default  reduce using rule 150 (sym)


state 14

    1 file: loadsys package imports . xdcl_list
    7 imports: imports . import ';'

    LIMPORT  shift, and go to state 20

    $default  reduce using rule 209 (xdcl_list)

    import     go to state 21
    xdcl_list  go to state 22


state 15

   17 import_package: LPACKAGE LNAME . import_safety ';'

    LNAME  shift, and go to state 23

    $default  reduce using rule 18 (import_safety)

    import_safety  go to state 24


state 16

    5 loadsys: $@1 import_package import_there .

    $default  reduce using rule 5 (loadsys)


state 17

   21 import_there: $@2 . hidden_import_list '$' '$'

    $default  reduce using rule 335 (hidden_import_list)

    hidden_import_list  go to state 25


state 18

  152 hidden_importsym: '@' LLITERAL . '.' LNAME

    '.'  shift, and go to state 26


state 19

    3 package: LPACKAGE sym ';' .

    $default  reduce using rule 3 (package)


state 20

    8 import: LIMPORT . import_stmt
    9       | LIMPORT . '(' import_stmt_list osemi ')'
   10       | LIMPORT . '(' ')'

    LLITERAL  shift, and go to state 27
    LNAME     shift, and go to state 9
    '('       shift, and go to state 28
    '.'       shift, and go to state 29
    '?'       shift, and go to state 10
    '@'       shift, and go to state 11

    import_stmt       go to state 30
    import_here       go to state 31
    sym               go to state 32
    hidden_importsym  go to state 13


state 21

    7 imports: imports import . ';'

    ';'  shift, and go to state 33


state 22

    1 file: loadsys package imports xdcl_list .
  210 xdcl_list: xdcl_list . xdcl ';'

    error       shift, and go to state 34
    LLITERAL    shift, and go to state 35
    LBREAK      shift, and go to state 36
    LCHAN       shift, and go to state 37
    LCONST      shift, and go to state 38
    LCONTINUE   shift, and go to state 39
    LDEFER      shift, and go to state 40
    LFALL       shift, and go to state 41
    LFOR        shift, and go to state 42
    LFUNC       shift, and go to state 43
    LGO         shift, and go to state 44
    LGOTO       shift, and go to state 45
    LIF         shift, and go to state 46
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LRETURN     shift, and go to state 49
    LSELECT     shift, and go to state 50
    LSTRUCT     shift, and go to state 51
    LSWITCH     shift, and go to state 52
    LTYPE       shift, and go to state 53
    LVAR        shift, and go to state 54
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $end  reduce using rule 1 (file)
    ';'   reduce using rule 22 (xdcl)

    xdcl              go to state 65
    common_dcl        go to state 66
    lconst            go to state 67
    simple_stmt       go to state 68
    for_stmt          go to state 69
    if_stmt           go to state 70
    switch_stmt       go to state 71
    select_stmt       go to state 72
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    new_name          go to state 78
    sym               go to state 79
    hidden_importsym  go to state 13
    name              go to state 80
    labelname         go to state 81
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    xfndcl            go to state 87
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    non_dcl_stmt      go to state 91
    expr_list         go to state 92


state 23

   19 import_safety: LNAME .

    $default  reduce using rule 19 (import_safety)


state 24

   17 import_package: LPACKAGE LNAME import_safety . ';'

    ';'  shift, and go to state 93


state 25

   21 import_there: $@2 hidden_import_list . '$' '$'
  336 hidden_import_list: hidden_import_list . hidden_import

    LCONST   shift, and go to state 94
    LFUNC    shift, and go to state 95
    LIMPORT  shift, and go to state 96
    LTYPE    shift, and go to state 97
    LVAR     shift, and go to state 98
    '$'      shift, and go to state 99

    hidden_import  go to state 100


state 26

  152 hidden_importsym: '@' LLITERAL '.' . LNAME

    LNAME  shift, and go to state 101


state 27

   14 import_here: LLITERAL .

    $default  reduce using rule 14 (import_here)


state 28

    9 import: LIMPORT '(' . import_stmt_list osemi ')'
   10       | LIMPORT '(' . ')'

    LLITERAL  shift, and go to state 27
    LNAME     shift, and go to state 9
    ')'       shift, and go to state 102
    '.'       shift, and go to state 29
    '?'       shift, and go to state 10
    '@'       shift, and go to state 11

    import_stmt       go to state 103
    import_stmt_list  go to state 104
    import_here       go to state 31
    sym               go to state 32
    hidden_importsym  go to state 13


state 29

   16 import_here: '.' . LLITERAL

    LLITERAL  shift, and go to state 105


state 30

    8 import: LIMPORT import_stmt .

    $default  reduce using rule 8 (import)


state 31

   11 import_stmt: import_here . import_package import_there

    LPACKAGE  shift, and go to state 7

    import_package  go to state 106


state 32

   15 import_here: sym . LLITERAL

    LLITERAL  shift, and go to state 107


state 33

    7 imports: imports import ';' .

    $default  reduce using rule 7 (imports)


state 34

   26 xdcl: error .

    $default  reduce using rule 26 (xdcl)


state 35

  121 pexpr_no_paren: LLITERAL .

    $default  reduce using rule 121 (pexpr_no_paren)


state 36

  255 non_dcl_stmt: LBREAK . onew_name

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 147 (onew_name)

    new_name          go to state 108
    onew_name         go to state 109
    sym               go to state 110
    hidden_importsym  go to state 13


state 37

  184 othertype: LCHAN . non_recvchantype
  185          | LCHAN . LCOMM ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 112
    '*'         shift, and go to state 113
    '('         shift, and go to state 114
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    non_recvchantype  go to state 117
    dotname           go to state 118
    othertype         go to state 119
    ptrtype           go to state 120
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 121


state 38

   37 lconst: LCONST .

    $default  reduce using rule 37 (lconst)


state 39

  256 non_dcl_stmt: LCONTINUE . onew_name

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 147 (onew_name)

    new_name          go to state 108
    onew_name         go to state 122
    sym               go to state 110
    hidden_importsym  go to state 13


state 40

  258 non_dcl_stmt: LDEFER . pseudocall

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    '('         shift, and go to state 61
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    pseudocall        go to state 123
    pexpr_no_paren    go to state 76
    pexpr             go to state 124
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 41

  254 non_dcl_stmt: LFALL .

    $default  reduce using rule 254 (non_dcl_stmt)


state 42

   73 for_stmt: LFOR . $@6 for_body

    $default  reduce using rule 72 ($@6)

    $@6  go to state 125


state 43

  195 xfndcl: LFUNC . fndcl fnbody
  200 fntype: LFUNC . '(' oarg_type_list_ocomma ')' fnres

    LNAME  shift, and go to state 9
    '('    shift, and go to state 126
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    sym               go to state 127
    hidden_importsym  go to state 13
    fndcl             go to state 128


state 44

  257 non_dcl_stmt: LGO . pseudocall

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    '('         shift, and go to state 61
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    pseudocall        go to state 129
    pexpr_no_paren    go to state 76
    pexpr             go to state 124
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 45

  259 non_dcl_stmt: LGOTO . new_name

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    new_name          go to state 130
    sym               go to state 110
    hidden_importsym  go to state 13


state 46

   79 if_stmt: LIF . $@7 if_header $@8 loop_body $@9 else

    $default  reduce using rule 76 ($@7)

    $@7  go to state 131


state 47

  193 interfacetype: LINTERFACE . lbrace interfacedcl_list osemi '}'
  194              | LINTERFACE . lbrace '}'

    LBODY  shift, and go to state 132
    '{'    shift, and go to state 133

    lbrace  go to state 134


state 48

  186 othertype: LMAP . '[' ntype ']' ntype

    '['  shift, and go to state 135


state 49

  260 non_dcl_stmt: LRETURN . oexpr_list

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 283 (oexpr_list)

    expr              go to state 136
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 137
    oexpr_list        go to state 138


state 50

   87 select_stmt: LSELECT . $@12 LBODY caseblock_list '}'

    $default  reduce using rule 86 ($@12)

    $@12  go to state 139


state 51

  191 structtype: LSTRUCT . lbrace structdcl_list osemi '}'
  192           | LSTRUCT . lbrace '}'

    LBODY  shift, and go to state 132
    '{'    shift, and go to state 133

    lbrace  go to state 140


state 52

   85 switch_stmt: LSWITCH . $@10 if_header $@11 LBODY caseblock_list '}'

    $default  reduce using rule 83 ($@10)

    $@10  go to state 141


state 53

   34 common_dcl: LTYPE . typedcl
   35           | LTYPE . '(' typedcl_list osemi ')'
   36           | LTYPE . '(' ')'

    LNAME  shift, and go to state 9
    '('    shift, and go to state 142
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    typedclname       go to state 143
    typedcl           go to state 144
    sym               go to state 145
    hidden_importsym  go to state 13


state 54

   27 common_dcl: LVAR . vardcl
   28           | LVAR . '(' vardcl_list osemi ')'
   29           | LVAR . '(' ')'

    LNAME  shift, and go to state 9
    '('    shift, and go to state 146
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    vardcl            go to state 147
    dcl_name          go to state 148
    sym               go to state 149
    hidden_importsym  go to state 13
    dcl_name_list     go to state 150


state 55

  117 uexpr: LCOMM . uexpr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    uexpr             go to state 151
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 56

  112 uexpr: '+' . uexpr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    uexpr             go to state 152
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 57

  113 uexpr: '-' . uexpr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    uexpr             go to state 153
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 58

  116 uexpr: '^' . uexpr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    uexpr             go to state 154
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 59

  110 uexpr: '*' . uexpr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    uexpr             go to state 155
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 60

  111 uexpr: '&' . uexpr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    uexpr             go to state 156
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 61

  132 pexpr_no_paren: '(' . expr_or_type ')' '{' start_complit braced_keyval_list '}'
  139 pexpr: '(' . expr_or_type ')'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 157
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 158
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 159
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    expr_or_type      go to state 160
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    non_expr_type     go to state 161
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 162
    recvchantype      go to state 163
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 164
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 62

  114 uexpr: '!' . uexpr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    uexpr             go to state 165
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 63

  115 uexpr: '~' . uexpr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    uexpr             go to state 166
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 64

  182 othertype: '[' . oexpr ']' ntype
  183          | '[' . LDDD ']' ntype

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LDDD        shift, and go to state 167
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 281 (oexpr)

    expr              go to state 168
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    oexpr             go to state 169


state 65

  210 xdcl_list: xdcl_list xdcl . ';'

    ';'  shift, and go to state 170


state 66

   23 xdcl: common_dcl .

    $default  reduce using rule 23 (xdcl)


state 67

   30 common_dcl: lconst . constdcl
   31           | lconst . '(' constdcl osemi ')'
   32           | lconst . '(' constdcl ';' constdcl_list osemi ')'
   33           | lconst . '(' ')'

    LNAME  shift, and go to state 9
    '('    shift, and go to state 171
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    constdcl          go to state 172
    dcl_name          go to state 148
    sym               go to state 149
    hidden_importsym  go to state 13
    dcl_name_list     go to state 173


state 68

  247 non_dcl_stmt: simple_stmt .

    $default  reduce using rule 247 (non_dcl_stmt)


state 69

  248 non_dcl_stmt: for_stmt .

    $default  reduce using rule 248 (non_dcl_stmt)


state 70

  251 non_dcl_stmt: if_stmt .

    $default  reduce using rule 251 (non_dcl_stmt)


state 71

  249 non_dcl_stmt: switch_stmt .

    $default  reduce using rule 249 (non_dcl_stmt)


state 72

  250 non_dcl_stmt: select_stmt .

    $default  reduce using rule 250 (non_dcl_stmt)


state 73

   48 simple_stmt: expr .
   49            | expr . LASOP expr
   52            | expr . LINC
   53            | expr . LDEC
   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr
  267 expr_list: expr .

    LASOP    shift, and go to state 174
    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LDEC     shift, and go to state 178
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LINC     shift, and go to state 182
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    LCOLAS    reduce using rule 267 (expr_list)
    '='       reduce using rule 267 (expr_list)
    ','       reduce using rule 267 (expr_list)
    $default  reduce using rule 48 (simple_stmt)


state 74

   88 expr: uexpr .

    $default  reduce using rule 88 (expr)


state 75

  128 pexpr_no_paren: pseudocall .

    $default  reduce using rule 128 (pexpr_no_paren)


state 76

  131 pexpr_no_paren: pexpr_no_paren . '{' start_complit braced_keyval_list '}'
  138 pexpr: pexpr_no_paren .

    '{'  shift, and go to state 197

    $default  reduce using rule 138 (pexpr)


state 77

  109 uexpr: pexpr .
  118 pseudocall: pexpr . '(' ')'
  119           | pexpr . '(' expr_or_type_list ocomma ')'
  120           | pexpr . '(' expr_or_type_list LDDD ocomma ')'
  123 pexpr_no_paren: pexpr . '.' sym
  124               | pexpr . '.' '(' expr_or_type ')'
  125               | pexpr . '.' '(' LTYPE ')'
  126               | pexpr . '[' expr ']'
  127               | pexpr . '[' oexpr ':' oexpr ']'

    '('  shift, and go to state 198
    '.'  shift, and go to state 199
    '['  shift, and go to state 200

    $default  reduce using rule 109 (uexpr)


state 78

  154 labelname: new_name .

    $default  reduce using rule 154 (labelname)


state 79

  145 new_name: sym .
  153 name: sym .

    ':'       reduce using rule 145 (new_name)
    $default  reduce using rule 153 (name)


state 80

  122 pexpr_no_paren: name .

    $default  reduce using rule 122 (pexpr_no_paren)


state 81

  253 non_dcl_stmt: labelname . ':' $@13 stmt

    ':'  shift, and go to state 201


state 82

  129 pexpr_no_paren: convtype . '(' expr ')'

    '('  shift, and go to state 202


state 83

  130 pexpr_no_paren: comptype . lbrace start_complit braced_keyval_list '}'

    LBODY  shift, and go to state 132
    '{'    shift, and go to state 133

    lbrace  go to state 203


state 84

  173 convtype: othertype .
  174 comptype: othertype .

    '('       reduce using rule 173 (convtype)
    $default  reduce using rule 174 (comptype)


state 85

  187 othertype: structtype .

    $default  reduce using rule 187 (othertype)


state 86

  188 othertype: interfacetype .

    $default  reduce using rule 188 (othertype)


state 87

   24 xdcl: xfndcl .

    $default  reduce using rule 24 (xdcl)


state 88

  172 convtype: fntype .
  206 fnlitdcl: fntype .

    '('       reduce using rule 172 (convtype)
    $default  reduce using rule 206 (fnlitdcl)


state 89

  207 fnliteral: fnlitdcl . lbrace stmt_list '}'
  208          | fnlitdcl . error

    error  shift, and go to state 204
    LBODY  shift, and go to state 132
    '{'    shift, and go to state 133

    lbrace  go to state 205


state 90

  133 pexpr_no_paren: fnliteral .

    $default  reduce using rule 133 (pexpr_no_paren)


state 91

   25 xdcl: non_dcl_stmt .

    $default  reduce using rule 25 (xdcl)


state 92

   50 simple_stmt: expr_list . '=' expr_list
   51            | expr_list . LCOLAS expr_list
  268 expr_list: expr_list . ',' expr

    LCOLAS  shift, and go to state 206
    '='     shift, and go to state 207
    ','     shift, and go to state 208


state 93

   17 import_package: LPACKAGE LNAME import_safety ';' .

    $default  reduce using rule 17 (import_package)


state 94

  297 hidden_import: LCONST . hidden_pkg_importsym '=' hidden_constant ';'
  298              | LCONST . hidden_pkg_importsym hidden_type '=' hidden_constant ';'

    '@'  shift, and go to state 11

    hidden_importsym      go to state 209
    hidden_pkg_importsym  go to state 210


state 95

  300 hidden_import: LFUNC . hidden_fndcl fnbody ';'

    '('  shift, and go to state 211
    '@'  shift, and go to state 11

    hidden_importsym      go to state 209
    hidden_fndcl          go to state 212
    hidden_pkg_importsym  go to state 213


state 96

  295 hidden_import: LIMPORT . LNAME LLITERAL ';'

    LNAME  shift, and go to state 214


state 97

  299 hidden_import: LTYPE . hidden_pkgtype hidden_type ';'

    '@'  shift, and go to state 11

    hidden_importsym      go to state 209
    hidden_pkg_importsym  go to state 215
    hidden_pkgtype        go to state 216


state 98

  296 hidden_import: LVAR . hidden_pkg_importsym hidden_type ';'

    '@'  shift, and go to state 11

    hidden_importsym      go to state 209
    hidden_pkg_importsym  go to state 217


state 99

   21 import_there: $@2 hidden_import_list '$' . '$'

    '$'  shift, and go to state 218


state 100

  336 hidden_import_list: hidden_import_list hidden_import .

    $default  reduce using rule 336 (hidden_import_list)


state 101

  152 hidden_importsym: '@' LLITERAL '.' LNAME .

    $default  reduce using rule 152 (hidden_importsym)


state 102

   10 import: LIMPORT '(' ')' .

    $default  reduce using rule 10 (import)


state 103

   12 import_stmt_list: import_stmt .

    $default  reduce using rule 12 (import_stmt_list)


state 104

    9 import: LIMPORT '(' import_stmt_list . osemi ')'
   13 import_stmt_list: import_stmt_list . ';' import_stmt

    ';'  shift, and go to state 219

    $default  reduce using rule 277 (osemi)

    osemi  go to state 220


state 105

   16 import_here: '.' LLITERAL .

    $default  reduce using rule 16 (import_here)


state 106

   11 import_stmt: import_here import_package . import_there

    $default  reduce using rule 20 ($@2)

    import_there  go to state 221
    $@2           go to state 17


state 107

   15 import_here: sym LLITERAL .

    $default  reduce using rule 15 (import_here)


state 108

  148 onew_name: new_name .

    $default  reduce using rule 148 (onew_name)


state 109

  255 non_dcl_stmt: LBREAK onew_name .

    $default  reduce using rule 255 (non_dcl_stmt)


state 110

  145 new_name: sym .

    $default  reduce using rule 145 (new_name)


state 111

  200 fntype: LFUNC . '(' oarg_type_list_ocomma ')' fnres

    '('  shift, and go to state 222


state 112

  185 othertype: LCHAN LCOMM . ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 225
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 113

  189 ptrtype: '*' . ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 231
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 114

  171 non_recvchantype: '(' . ntype ')'

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 232
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 115

  153 name: sym .

    $default  reduce using rule 153 (name)


state 116

  180 dotname: name .
  181        | name . '.' sym

    '.'  shift, and go to state 233

    $default  reduce using rule 180 (dotname)


state 117

  184 othertype: LCHAN non_recvchantype .

    $default  reduce using rule 184 (othertype)


state 118

  170 non_recvchantype: dotname .

    $default  reduce using rule 170 (non_recvchantype)


state 119

  168 non_recvchantype: othertype .

    $default  reduce using rule 168 (non_recvchantype)


state 120

  169 non_recvchantype: ptrtype .

    $default  reduce using rule 169 (non_recvchantype)


state 121

  167 non_recvchantype: fntype .

    $default  reduce using rule 167 (non_recvchantype)


state 122

  256 non_dcl_stmt: LCONTINUE onew_name .

    $default  reduce using rule 256 (non_dcl_stmt)


state 123

  128 pexpr_no_paren: pseudocall .
  258 non_dcl_stmt: LDEFER pseudocall .

    LCASE     reduce using rule 258 (non_dcl_stmt)
    LDEFAULT  reduce using rule 258 (non_dcl_stmt)
    ';'       reduce using rule 258 (non_dcl_stmt)
    '}'       reduce using rule 258 (non_dcl_stmt)
    $default  reduce using rule 128 (pexpr_no_paren)


state 124

  118 pseudocall: pexpr . '(' ')'
  119           | pexpr . '(' expr_or_type_list ocomma ')'
  120           | pexpr . '(' expr_or_type_list LDDD ocomma ')'
  123 pexpr_no_paren: pexpr . '.' sym
  124               | pexpr . '.' '(' expr_or_type ')'
  125               | pexpr . '.' '(' LTYPE ')'
  126               | pexpr . '[' expr ']'
  127               | pexpr . '[' oexpr ':' oexpr ']'

    '('  shift, and go to state 198
    '.'  shift, and go to state 199
    '['  shift, and go to state 200


state 125

   73 for_stmt: LFOR $@6 . for_body

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 285 (osimple_stmt)

    simple_stmt       go to state 234
    range_stmt        go to state 235
    for_header        go to state 236
    for_body          go to state 237
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 238
    osimple_stmt      go to state 239


state 126

  197 fndcl: '(' . oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres
  200 fntype: LFUNC '(' . oarg_type_list_ocomma ')' fnres

    LCHAN       shift, and go to state 37
    LDDD        shift, and go to state 240
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 240 (oarg_type_list_ocomma)

    name_or_type           go to state 241
    sym                    go to state 242
    hidden_importsym       go to state 13
    name                   go to state 116
    dotdotdot              go to state 243
    ntype                  go to state 244
    dotname                go to state 226
    othertype              go to state 227
    ptrtype                go to state 228
    recvchantype           go to state 229
    structtype             go to state 85
    interfacetype          go to state 86
    fntype                 go to state 230
    arg_type               go to state 245
    arg_type_list          go to state 246
    oarg_type_list_ocomma  go to state 247


state 127

  196 fndcl: sym . '(' oarg_type_list_ocomma ')' fnres

    '('  shift, and go to state 248


state 128

  195 xfndcl: LFUNC fndcl . fnbody

    '{'  shift, and go to state 249

    $default  reduce using rule 201 (fnbody)

    fnbody  go to state 250


state 129

  128 pexpr_no_paren: pseudocall .
  257 non_dcl_stmt: LGO pseudocall .

    LCASE     reduce using rule 257 (non_dcl_stmt)
    LDEFAULT  reduce using rule 257 (non_dcl_stmt)
    ';'       reduce using rule 257 (non_dcl_stmt)
    '}'       reduce using rule 257 (non_dcl_stmt)
    $default  reduce using rule 128 (pexpr_no_paren)


state 130

  259 non_dcl_stmt: LGOTO new_name .

    $default  reduce using rule 259 (non_dcl_stmt)


state 131

   79 if_stmt: LIF $@7 . if_header $@8 loop_body $@9 else

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 285 (osimple_stmt)

    simple_stmt       go to state 234
    if_header         go to state 251
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 92
    osimple_stmt      go to state 252


state 132

  143 lbrace: LBODY .

    $default  reduce using rule 143 (lbrace)


state 133

  144 lbrace: '{' .

    $default  reduce using rule 144 (lbrace)


state 134

  193 interfacetype: LINTERFACE lbrace . interfacedcl_list osemi '}'
  194              | LINTERFACE lbrace . '}'

    LNAME  shift, and go to state 253
    '('    shift, and go to state 254
    '}'    shift, and go to state 255
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    new_name           go to state 256
    sym                go to state 110
    hidden_importsym   go to state 13
    interfacedcl_list  go to state 257
    packname           go to state 258
    interfacedcl       go to state 259


state 135

  186 othertype: LMAP '[' . ntype ']' ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 260
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 136

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr
  267 expr_list: expr .

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 267 (expr_list)


state 137

  268 expr_list: expr_list . ',' expr
  284 oexpr_list: expr_list .

    ','  shift, and go to state 208

    $default  reduce using rule 284 (oexpr_list)


state 138

  260 non_dcl_stmt: LRETURN oexpr_list .

    $default  reduce using rule 260 (non_dcl_stmt)


state 139

   87 select_stmt: LSELECT $@12 . LBODY caseblock_list '}'

    LBODY  shift, and go to state 261


state 140

  191 structtype: LSTRUCT lbrace . structdcl_list osemi '}'
  192           | LSTRUCT lbrace . '}'

    LNAME  shift, and go to state 253
    '*'    shift, and go to state 262
    '('    shift, and go to state 263
    '}'    shift, and go to state 264
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    new_name          go to state 265
    sym               go to state 110
    hidden_importsym  go to state 13
    structdcl_list    go to state 266
    structdcl         go to state 267
    packname          go to state 268
    embed             go to state 269
    new_name_list     go to state 270


state 141

   85 switch_stmt: LSWITCH $@10 . if_header $@11 LBODY caseblock_list '}'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 285 (osimple_stmt)

    simple_stmt       go to state 234
    if_header         go to state 271
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 92
    osimple_stmt      go to state 252


state 142

   35 common_dcl: LTYPE '(' . typedcl_list osemi ')'
   36           | LTYPE '(' . ')'

    LNAME  shift, and go to state 9
    ')'    shift, and go to state 272
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    typedclname       go to state 143
    typedcl           go to state 273
    sym               go to state 145
    hidden_importsym  go to state 13
    typedcl_list      go to state 274


state 143

   47 typedcl: typedclname . ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 275
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 144

   34 common_dcl: LTYPE typedcl .

    $default  reduce using rule 34 (common_dcl)


state 145

   46 typedclname: sym .

    $default  reduce using rule 46 (typedclname)


state 146

   28 common_dcl: LVAR '(' . vardcl_list osemi ')'
   29           | LVAR '(' . ')'

    LNAME  shift, and go to state 9
    ')'    shift, and go to state 276
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    vardcl            go to state 277
    dcl_name          go to state 148
    sym               go to state 149
    hidden_importsym  go to state 13
    vardcl_list       go to state 278
    dcl_name_list     go to state 150


state 147

   27 common_dcl: LVAR vardcl .

    $default  reduce using rule 27 (common_dcl)


state 148

  265 dcl_name_list: dcl_name .

    $default  reduce using rule 265 (dcl_name_list)


state 149

  146 dcl_name: sym .

    $default  reduce using rule 146 (dcl_name)


state 150

   38 vardcl: dcl_name_list . ntype
   39       | dcl_name_list . ntype '=' expr_list
   40       | dcl_name_list . '=' expr_list
  266 dcl_name_list: dcl_name_list . ',' dcl_name

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '='         shift, and go to state 279
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11
    ','         shift, and go to state 280

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 281
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 151

  117 uexpr: LCOMM uexpr .

    $default  reduce using rule 117 (uexpr)


state 152

  112 uexpr: '+' uexpr .

    $default  reduce using rule 112 (uexpr)


state 153

  113 uexpr: '-' uexpr .

    $default  reduce using rule 113 (uexpr)


state 154

  116 uexpr: '^' uexpr .

    $default  reduce using rule 116 (uexpr)


state 155

  110 uexpr: '*' uexpr .

    $default  reduce using rule 110 (uexpr)


state 156

  111 uexpr: '&' uexpr .

    $default  reduce using rule 111 (uexpr)


state 157

  117 uexpr: LCOMM . uexpr
  190 recvchantype: LCOMM . LCHAN ntype

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 282
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    uexpr             go to state 151
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 158

  110 uexpr: '*' . uexpr
  166 non_expr_type: '*' . non_expr_type

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 157
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 158
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    uexpr             go to state 155
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    non_expr_type     go to state 283
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 162
    recvchantype      go to state 163
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 164
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 159

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr
  140 expr_or_type: expr .

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 140 (expr_or_type)


state 160

  132 pexpr_no_paren: '(' expr_or_type . ')' '{' start_complit braced_keyval_list '}'
  139 pexpr: '(' expr_or_type . ')'

    ')'  shift, and go to state 284


state 161

  141 expr_or_type: non_expr_type .

    $default  reduce using rule 141 (expr_or_type)


state 162

  165 non_expr_type: othertype .
  173 convtype: othertype .
  174 comptype: othertype .

    LBODY     reduce using rule 174 (comptype)
    '('       reduce using rule 173 (convtype)
    '{'       reduce using rule 174 (comptype)
    $default  reduce using rule 165 (non_expr_type)


state 163

  163 non_expr_type: recvchantype .

    $default  reduce using rule 163 (non_expr_type)


state 164

  164 non_expr_type: fntype .
  172 convtype: fntype .
  206 fnlitdcl: fntype .

    error     reduce using rule 206 (fnlitdcl)
    LBODY     reduce using rule 206 (fnlitdcl)
    '('       reduce using rule 172 (convtype)
    '{'       reduce using rule 206 (fnlitdcl)
    $default  reduce using rule 164 (non_expr_type)


state 165

  114 uexpr: '!' uexpr .

    $default  reduce using rule 114 (uexpr)


state 166

  115 uexpr: '~' uexpr .

    $default  reduce using rule 115 (uexpr)


state 167

  183 othertype: '[' LDDD . ']' ntype

    ']'  shift, and go to state 285


state 168

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr
  282 oexpr: expr .

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 282 (oexpr)


state 169

  182 othertype: '[' oexpr . ']' ntype

    ']'  shift, and go to state 286


state 170

  210 xdcl_list: xdcl_list xdcl ';' .

    $default  reduce using rule 210 (xdcl_list)


state 171

   31 common_dcl: lconst '(' . constdcl osemi ')'
   32           | lconst '(' . constdcl ';' constdcl_list osemi ')'
   33           | lconst '(' . ')'

    LNAME  shift, and go to state 9
    ')'    shift, and go to state 287
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    constdcl          go to state 288
    dcl_name          go to state 148
    sym               go to state 149
    hidden_importsym  go to state 13
    dcl_name_list     go to state 173


state 172

   30 common_dcl: lconst constdcl .

    $default  reduce using rule 30 (common_dcl)


state 173

   41 constdcl: dcl_name_list . ntype '=' expr_list
   42         | dcl_name_list . '=' expr_list
  266 dcl_name_list: dcl_name_list . ',' dcl_name

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '='         shift, and go to state 289
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11
    ','         shift, and go to state 280

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 290
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 174

   49 simple_stmt: expr LASOP . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 291
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 175

   90 expr: expr LANDAND . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 292
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 176

  105 expr: expr LANDNOT . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 293
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 177

  108 expr: expr LCOMM . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 294
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 178

   53 simple_stmt: expr LDEC .

    $default  reduce using rule 53 (simple_stmt)


state 179

   91 expr: expr LEQ . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 295
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 180

   95 expr: expr LGE . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 296
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 181

   96 expr: expr LGT . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 297
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 182

   52 simple_stmt: expr LINC .

    $default  reduce using rule 52 (simple_stmt)


state 183

   94 expr: expr LLE . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 298
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 184

  106 expr: expr LLSH . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 299
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 185

   93 expr: expr LLT . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 300
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 186

   92 expr: expr LNE . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 301
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 187

   89 expr: expr LOROR . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 302
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 188

  107 expr: expr LRSH . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 303
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 189

   97 expr: expr '+' . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 304
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 190

   98 expr: expr '-' . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 305
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 191

   99 expr: expr '|' . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 306
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 192

  100 expr: expr '^' . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 307
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 193

  101 expr: expr '*' . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 308
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 194

  102 expr: expr '/' . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 309
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 195

  103 expr: expr '%' . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 310
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 196

  104 expr: expr '&' . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 311
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 197

  131 pexpr_no_paren: pexpr_no_paren '{' . start_complit braced_keyval_list '}'

    $default  reduce using rule 134 (start_complit)

    start_complit  go to state 312


state 198

  118 pseudocall: pexpr '(' . ')'
  119           | pexpr '(' . expr_or_type_list ocomma ')'
  120           | pexpr '(' . expr_or_type_list LDDD ocomma ')'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 157
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 158
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    ')'         shift, and go to state 313
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr               go to state 159
    uexpr              go to state 74
    pseudocall         go to state 75
    pexpr_no_paren     go to state 76
    pexpr              go to state 77
    expr_or_type       go to state 314
    sym                go to state 115
    hidden_importsym   go to state 13
    name               go to state 80
    non_expr_type      go to state 161
    convtype           go to state 82
    comptype           go to state 83
    othertype          go to state 162
    recvchantype       go to state 163
    structtype         go to state 85
    interfacetype      go to state 86
    fntype             go to state 164
    fnlitdcl           go to state 89
    fnliteral          go to state 90
    expr_or_type_list  go to state 315


state 199

  123 pexpr_no_paren: pexpr '.' . sym
  124               | pexpr '.' . '(' expr_or_type ')'
  125               | pexpr '.' . '(' LTYPE ')'

    LNAME  shift, and go to state 9
    '('    shift, and go to state 316
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    sym               go to state 317
    hidden_importsym  go to state 13


state 200

  126 pexpr_no_paren: pexpr '[' . expr ']'
  127               | pexpr '[' . oexpr ':' oexpr ']'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 281 (oexpr)

    expr              go to state 318
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    oexpr             go to state 319


state 201

  253 non_dcl_stmt: labelname ':' . $@13 stmt

    $default  reduce using rule 252 ($@13)

    $@13  go to state 320


state 202

  129 pexpr_no_paren: convtype '(' . expr ')'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 321
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 203

  130 pexpr_no_paren: comptype lbrace . start_complit braced_keyval_list '}'

    $default  reduce using rule 134 (start_complit)

    start_complit  go to state 322


state 204

  208 fnliteral: fnlitdcl error .

    $default  reduce using rule 208 (fnliteral)


state 205

  207 fnliteral: fnlitdcl lbrace . stmt_list '}'

    error       shift, and go to state 323
    LLITERAL    shift, and go to state 35
    LBREAK      shift, and go to state 36
    LCHAN       shift, and go to state 37
    LCONST      shift, and go to state 38
    LCONTINUE   shift, and go to state 39
    LDEFER      shift, and go to state 40
    LFALL       shift, and go to state 41
    LFOR        shift, and go to state 42
    LFUNC       shift, and go to state 111
    LGO         shift, and go to state 44
    LGOTO       shift, and go to state 45
    LIF         shift, and go to state 46
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LRETURN     shift, and go to state 49
    LSELECT     shift, and go to state 50
    LSTRUCT     shift, and go to state 51
    LSWITCH     shift, and go to state 52
    LTYPE       shift, and go to state 53
    LVAR        shift, and go to state 54
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 324
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    ';'  reduce using rule 242 (stmt)
    '}'  reduce using rule 242 (stmt)

    common_dcl        go to state 325
    lconst            go to state 67
    simple_stmt       go to state 68
    compound_stmt     go to state 326
    for_stmt          go to state 69
    if_stmt           go to state 70
    switch_stmt       go to state 71
    select_stmt       go to state 72
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    new_name          go to state 78
    sym               go to state 79
    hidden_importsym  go to state 13
    name              go to state 80
    labelname         go to state 81
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    stmt              go to state 327
    non_dcl_stmt      go to state 328
    stmt_list         go to state 329
    expr_list         go to state 92


state 206

   51 simple_stmt: expr_list LCOLAS . expr_list

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 136
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 330


state 207

   50 simple_stmt: expr_list '=' . expr_list

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 136
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 331


state 208

  268 expr_list: expr_list ',' . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 332
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 209

  301 hidden_pkg_importsym: hidden_importsym .

    $default  reduce using rule 301 (hidden_pkg_importsym)


state 210

  297 hidden_import: LCONST hidden_pkg_importsym . '=' hidden_constant ';'
  298              | LCONST hidden_pkg_importsym . hidden_type '=' hidden_constant ';'

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '='         shift, and go to state 341
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 344
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 211

  199 hidden_fndcl: '(' . hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    sym                 go to state 348
    hidden_importsym    go to state 13
    hidden_funarg       go to state 349
    hidden_funarg_list  go to state 350


state 212

  300 hidden_import: LFUNC hidden_fndcl . fnbody ';'

    '{'  shift, and go to state 249

    $default  reduce using rule 201 (fnbody)

    fnbody  go to state 351


state 213

  198 hidden_fndcl: hidden_pkg_importsym . '(' ohidden_funarg_list ')' ohidden_funres

    '('  shift, and go to state 352


state 214

  295 hidden_import: LIMPORT LNAME . LLITERAL ';'

    LLITERAL  shift, and go to state 353


state 215

  302 hidden_pkgtype: hidden_pkg_importsym .

    $default  reduce using rule 302 (hidden_pkgtype)


state 216

  299 hidden_import: LTYPE hidden_pkgtype . hidden_type ';'

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 354
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 217

  296 hidden_import: LVAR hidden_pkg_importsym . hidden_type ';'

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 355
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 218

   21 import_there: $@2 hidden_import_list '$' '$' .

    $default  reduce using rule 21 (import_there)


state 219

   13 import_stmt_list: import_stmt_list ';' . import_stmt
  278 osemi: ';' .

    LLITERAL  shift, and go to state 27
    LNAME     shift, and go to state 9
    '.'       shift, and go to state 29
    '?'       shift, and go to state 10
    '@'       shift, and go to state 11

    $default  reduce using rule 278 (osemi)

    import_stmt       go to state 356
    import_here       go to state 31
    sym               go to state 32
    hidden_importsym  go to state 13


state 220

    9 import: LIMPORT '(' import_stmt_list osemi . ')'

    ')'  shift, and go to state 357


state 221

   11 import_stmt: import_here import_package import_there .

    $default  reduce using rule 11 (import_stmt)


state 222

  200 fntype: LFUNC '(' . oarg_type_list_ocomma ')' fnres

    LCHAN       shift, and go to state 37
    LDDD        shift, and go to state 240
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 240 (oarg_type_list_ocomma)

    name_or_type           go to state 241
    sym                    go to state 242
    hidden_importsym       go to state 13
    name                   go to state 116
    dotdotdot              go to state 243
    ntype                  go to state 244
    dotname                go to state 226
    othertype              go to state 227
    ptrtype                go to state 228
    recvchantype           go to state 229
    structtype             go to state 85
    interfacetype          go to state 86
    fntype                 go to state 230
    arg_type               go to state 245
    arg_type_list          go to state 246
    oarg_type_list_ocomma  go to state 358


state 223

  190 recvchantype: LCOMM . LCHAN ntype

    LCHAN  shift, and go to state 359


state 224

  162 ntype: '(' . ntype ')'

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 360
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 225

  185 othertype: LCHAN LCOMM ntype .

    $default  reduce using rule 185 (othertype)


state 226

  161 ntype: dotname .

    $default  reduce using rule 161 (ntype)


state 227

  159 ntype: othertype .

    $default  reduce using rule 159 (ntype)


state 228

  160 ntype: ptrtype .

    $default  reduce using rule 160 (ntype)


state 229

  157 ntype: recvchantype .

    $default  reduce using rule 157 (ntype)


state 230

  158 ntype: fntype .

    $default  reduce using rule 158 (ntype)


state 231

  189 ptrtype: '*' ntype .

    $default  reduce using rule 189 (ptrtype)


state 232

  171 non_recvchantype: '(' ntype . ')'

    ')'  shift, and go to state 361


state 233

  181 dotname: name '.' . sym

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    sym               go to state 362
    hidden_importsym  go to state 13


state 234

  286 osimple_stmt: simple_stmt .

    $default  reduce using rule 286 (osimple_stmt)


state 235

   70 for_header: range_stmt .

    $default  reduce using rule 70 (for_header)


state 236

   71 for_body: for_header . loop_body

    LBODY  shift, and go to state 363

    loop_body  go to state 364


state 237

   73 for_stmt: LFOR $@6 for_body .

    $default  reduce using rule 73 (for_stmt)


state 238

   50 simple_stmt: expr_list . '=' expr_list
   51            | expr_list . LCOLAS expr_list
   66 range_stmt: expr_list . '=' LRANGE expr
   67           | expr_list . LCOLAS LRANGE expr
  268 expr_list: expr_list . ',' expr

    LCOLAS  shift, and go to state 365
    '='     shift, and go to state 366
    ','     shift, and go to state 208


state 239

   68 for_header: osimple_stmt . ';' osimple_stmt ';' osimple_stmt
   69           | osimple_stmt .

    ';'  shift, and go to state 367

    $default  reduce using rule 69 (for_header)


state 240

  155 dotdotdot: LDDD .
  156          | LDDD . ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 155 (dotdotdot)

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 368
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 241

  234 arg_type: name_or_type .

    $default  reduce using rule 234 (arg_type)


state 242

  153 name: sym .
  235 arg_type: sym . name_or_type
  236         | sym . dotdotdot

    LCHAN       shift, and go to state 37
    LDDD        shift, and go to state 240
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 153 (name)

    name_or_type      go to state 369
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    dotdotdot         go to state 370
    ntype             go to state 244
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 243

  237 arg_type: dotdotdot .

    $default  reduce using rule 237 (arg_type)


state 244

  142 name_or_type: ntype .

    $default  reduce using rule 142 (name_or_type)


state 245

  238 arg_type_list: arg_type .

    $default  reduce using rule 238 (arg_type_list)


state 246

  239 arg_type_list: arg_type_list . ',' arg_type
  241 oarg_type_list_ocomma: arg_type_list . ocomma

    ','  shift, and go to state 371

    $default  reduce using rule 279 (ocomma)

    ocomma  go to state 372


state 247

  197 fndcl: '(' oarg_type_list_ocomma . ')' sym '(' oarg_type_list_ocomma ')' fnres
  200 fntype: LFUNC '(' oarg_type_list_ocomma . ')' fnres

    ')'  shift, and go to state 373


state 248

  196 fndcl: sym '(' . oarg_type_list_ocomma ')' fnres

    LCHAN       shift, and go to state 37
    LDDD        shift, and go to state 240
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 240 (oarg_type_list_ocomma)

    name_or_type           go to state 241
    sym                    go to state 242
    hidden_importsym       go to state 13
    name                   go to state 116
    dotdotdot              go to state 243
    ntype                  go to state 244
    dotname                go to state 226
    othertype              go to state 227
    ptrtype                go to state 228
    recvchantype           go to state 229
    structtype             go to state 85
    interfacetype          go to state 86
    fntype                 go to state 230
    arg_type               go to state 245
    arg_type_list          go to state 246
    oarg_type_list_ocomma  go to state 374


state 249

  202 fnbody: '{' . stmt_list '}'

    error       shift, and go to state 323
    LLITERAL    shift, and go to state 35
    LBREAK      shift, and go to state 36
    LCHAN       shift, and go to state 37
    LCONST      shift, and go to state 38
    LCONTINUE   shift, and go to state 39
    LDEFER      shift, and go to state 40
    LFALL       shift, and go to state 41
    LFOR        shift, and go to state 42
    LFUNC       shift, and go to state 111
    LGO         shift, and go to state 44
    LGOTO       shift, and go to state 45
    LIF         shift, and go to state 46
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LRETURN     shift, and go to state 49
    LSELECT     shift, and go to state 50
    LSTRUCT     shift, and go to state 51
    LSWITCH     shift, and go to state 52
    LTYPE       shift, and go to state 53
    LVAR        shift, and go to state 54
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 324
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    ';'  reduce using rule 242 (stmt)
    '}'  reduce using rule 242 (stmt)

    common_dcl        go to state 325
    lconst            go to state 67
    simple_stmt       go to state 68
    compound_stmt     go to state 326
    for_stmt          go to state 69
    if_stmt           go to state 70
    switch_stmt       go to state 71
    select_stmt       go to state 72
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    new_name          go to state 78
    sym               go to state 79
    hidden_importsym  go to state 13
    name              go to state 80
    labelname         go to state 81
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    stmt              go to state 327
    non_dcl_stmt      go to state 328
    stmt_list         go to state 375
    expr_list         go to state 92


state 250

  195 xfndcl: LFUNC fndcl fnbody .

    $default  reduce using rule 195 (xfndcl)


state 251

   79 if_stmt: LIF $@7 if_header . $@8 loop_body $@9 else

    $default  reduce using rule 77 ($@8)

    $@8  go to state 376


state 252

   74 if_header: osimple_stmt .
   75          | osimple_stmt . ';' osimple_stmt

    ';'  shift, and go to state 377

    $default  reduce using rule 74 (if_header)


state 253

  149 sym: LNAME .
  227 packname: LNAME .
  228         | LNAME . '.' sym

    '.'  shift, and go to state 378

    LLITERAL  reduce using rule 227 (packname)
    ';'       reduce using rule 227 (packname)
    '}'       reduce using rule 227 (packname)
    $default  reduce using rule 149 (sym)


state 254

  232 interfacedcl: '(' . packname ')'

    LNAME  shift, and go to state 379

    packname  go to state 380


state 255

  194 interfacetype: LINTERFACE lbrace '}' .

    $default  reduce using rule 194 (interfacetype)


state 256

  230 interfacedcl: new_name . indcl

    '('  shift, and go to state 381

    indcl  go to state 382


state 257

  193 interfacetype: LINTERFACE lbrace interfacedcl_list . osemi '}'
  220 interfacedcl_list: interfacedcl_list . ';' interfacedcl

    ';'  shift, and go to state 383

    $default  reduce using rule 277 (osemi)

    osemi  go to state 384


state 258

  231 interfacedcl: packname .

    $default  reduce using rule 231 (interfacedcl)


state 259

  219 interfacedcl_list: interfacedcl .

    $default  reduce using rule 219 (interfacedcl_list)


state 260

  186 othertype: LMAP '[' ntype . ']' ntype

    ']'  shift, and go to state 385


state 261

   87 select_stmt: LSELECT $@12 LBODY . caseblock_list '}'

    $default  reduce using rule 62 (caseblock_list)

    caseblock_list  go to state 386


state 262

  224 structdcl: '*' . embed oliteral
  226          | '*' . '(' embed ')' oliteral

    LNAME  shift, and go to state 379
    '('    shift, and go to state 387

    packname  go to state 268
    embed     go to state 388


state 263

  223 structdcl: '(' . embed ')' oliteral
  225          | '(' . '*' embed ')' oliteral

    LNAME  shift, and go to state 379
    '*'    shift, and go to state 389

    packname  go to state 268
    embed     go to state 390


state 264

  192 structtype: LSTRUCT lbrace '}' .

    $default  reduce using rule 192 (structtype)


state 265

  263 new_name_list: new_name .

    $default  reduce using rule 263 (new_name_list)


state 266

  191 structtype: LSTRUCT lbrace structdcl_list . osemi '}'
  218 structdcl_list: structdcl_list . ';' structdcl

    ';'  shift, and go to state 391

    $default  reduce using rule 277 (osemi)

    osemi  go to state 392


state 267

  217 structdcl_list: structdcl .

    $default  reduce using rule 217 (structdcl_list)


state 268

  229 embed: packname .

    $default  reduce using rule 229 (embed)


state 269

  222 structdcl: embed . oliteral

    LLITERAL  shift, and go to state 393

    $default  reduce using rule 293 (oliteral)

    oliteral  go to state 394


state 270

  221 structdcl: new_name_list . ntype oliteral
  264 new_name_list: new_name_list . ',' new_name

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11
    ','         shift, and go to state 395

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 396
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 271

   85 switch_stmt: LSWITCH $@10 if_header . $@11 LBODY caseblock_list '}'

    $default  reduce using rule 84 ($@11)

    $@11  go to state 397


state 272

   36 common_dcl: LTYPE '(' ')' .

    $default  reduce using rule 36 (common_dcl)


state 273

  215 typedcl_list: typedcl .

    $default  reduce using rule 215 (typedcl_list)


state 274

   35 common_dcl: LTYPE '(' typedcl_list . osemi ')'
  216 typedcl_list: typedcl_list . ';' typedcl

    ';'  shift, and go to state 398

    $default  reduce using rule 277 (osemi)

    osemi  go to state 399


state 275

   47 typedcl: typedclname ntype .

    $default  reduce using rule 47 (typedcl)


state 276

   29 common_dcl: LVAR '(' ')' .

    $default  reduce using rule 29 (common_dcl)


state 277

  211 vardcl_list: vardcl .

    $default  reduce using rule 211 (vardcl_list)


state 278

   28 common_dcl: LVAR '(' vardcl_list . osemi ')'
  212 vardcl_list: vardcl_list . ';' vardcl

    ';'  shift, and go to state 400

    $default  reduce using rule 277 (osemi)

    osemi  go to state 401


state 279

   40 vardcl: dcl_name_list '=' . expr_list

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 136
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 402


state 280

  266 dcl_name_list: dcl_name_list ',' . dcl_name

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    dcl_name          go to state 403
    sym               go to state 149
    hidden_importsym  go to state 13


state 281

   38 vardcl: dcl_name_list ntype .
   39       | dcl_name_list ntype . '=' expr_list

    '='  shift, and go to state 404

    $default  reduce using rule 38 (vardcl)


state 282

  184 othertype: LCHAN . non_recvchantype
  185          | LCHAN . LCOMM ntype
  190 recvchantype: LCOMM LCHAN . ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 405
    '*'         shift, and go to state 113
    '('         shift, and go to state 406
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 407
    non_recvchantype  go to state 117
    dotname           go to state 408
    othertype         go to state 409
    ptrtype           go to state 410
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 411


state 283

  166 non_expr_type: '*' non_expr_type .

    $default  reduce using rule 166 (non_expr_type)


state 284

  132 pexpr_no_paren: '(' expr_or_type ')' . '{' start_complit braced_keyval_list '}'
  139 pexpr: '(' expr_or_type ')' .

    '{'  shift, and go to state 412

    $default  reduce using rule 139 (pexpr)


state 285

  183 othertype: '[' LDDD ']' . ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 413
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 286

  182 othertype: '[' oexpr ']' . ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 414
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 287

   33 common_dcl: lconst '(' ')' .

    $default  reduce using rule 33 (common_dcl)


state 288

   31 common_dcl: lconst '(' constdcl . osemi ')'
   32           | lconst '(' constdcl . ';' constdcl_list osemi ')'

    ';'  shift, and go to state 415

    $default  reduce using rule 277 (osemi)

    osemi  go to state 416


state 289

   42 constdcl: dcl_name_list '=' . expr_list

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 136
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 417


state 290

   41 constdcl: dcl_name_list ntype . '=' expr_list

    '='  shift, and go to state 418


state 291

   49 simple_stmt: expr LASOP expr .
   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 49 (simple_stmt)


state 292

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   90     | expr LANDAND expr .
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 90 (expr)


state 293

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  105     | expr LANDNOT expr .
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    $default  reduce using rule 105 (expr)


state 294

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr
  108     | expr LCOMM expr .

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 108 (expr)


state 295

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   91     | expr LEQ expr .
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LLSH     shift, and go to state 184
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 91 (expr)


state 296

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   95     | expr LGE expr .
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LLSH     shift, and go to state 184
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 95 (expr)


state 297

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   96     | expr LGT expr .
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LLSH     shift, and go to state 184
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 96 (expr)


state 298

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   94     | expr LLE expr .
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LLSH     shift, and go to state 184
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 94 (expr)


state 299

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  106     | expr LLSH expr .
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    $default  reduce using rule 106 (expr)


state 300

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   93     | expr LLT expr .
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LLSH     shift, and go to state 184
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 93 (expr)


state 301

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   92     | expr LNE expr .
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LLSH     shift, and go to state 184
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 92 (expr)


state 302

   89 expr: expr . LOROR expr
   89     | expr LOROR expr .
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 89 (expr)


state 303

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  107     | expr LRSH expr .
  108     | expr . LCOMM expr

    $default  reduce using rule 107 (expr)


state 304

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   97     | expr '+' expr .
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LLSH     shift, and go to state 184
    LRSH     shift, and go to state 188
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 97 (expr)


state 305

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   98     | expr '-' expr .
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LLSH     shift, and go to state 184
    LRSH     shift, and go to state 188
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 98 (expr)


state 306

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
   99     | expr '|' expr .
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LLSH     shift, and go to state 184
    LRSH     shift, and go to state 188
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 99 (expr)


state 307

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  100     | expr '^' expr .
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDNOT  shift, and go to state 176
    LLSH     shift, and go to state 184
    LRSH     shift, and go to state 188
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 100 (expr)


state 308

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  101     | expr '*' expr .
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    $default  reduce using rule 101 (expr)


state 309

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  102     | expr '/' expr .
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    $default  reduce using rule 102 (expr)


state 310

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  103     | expr '%' expr .
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    $default  reduce using rule 103 (expr)


state 311

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  104     | expr '&' expr .
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    $default  reduce using rule 104 (expr)


state 312

  131 pexpr_no_paren: pexpr_no_paren '{' start_complit . braced_keyval_list '}'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 419
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 275 (braced_keyval_list)

    expr                go to state 420
    uexpr               go to state 74
    pseudocall          go to state 75
    pexpr_no_paren      go to state 76
    keyval              go to state 421
    complitexpr         go to state 422
    pexpr               go to state 77
    sym                 go to state 115
    hidden_importsym    go to state 13
    name                go to state 80
    convtype            go to state 82
    comptype            go to state 83
    othertype           go to state 84
    structtype          go to state 85
    interfacetype       go to state 86
    fntype              go to state 88
    fnlitdcl            go to state 89
    fnliteral           go to state 90
    keyval_list         go to state 423
    braced_keyval_list  go to state 424


state 313

  118 pseudocall: pexpr '(' ')' .

    $default  reduce using rule 118 (pseudocall)


state 314

  269 expr_or_type_list: expr_or_type .

    $default  reduce using rule 269 (expr_or_type_list)


state 315

  119 pseudocall: pexpr '(' expr_or_type_list . ocomma ')'
  120           | pexpr '(' expr_or_type_list . LDDD ocomma ')'
  270 expr_or_type_list: expr_or_type_list . ',' expr_or_type

    LDDD  shift, and go to state 425
    ','   shift, and go to state 426

    $default  reduce using rule 279 (ocomma)

    ocomma  go to state 427


state 316

  124 pexpr_no_paren: pexpr '.' '(' . expr_or_type ')'
  125               | pexpr '.' '(' . LTYPE ')'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LTYPE       shift, and go to state 428
    LCOMM       shift, and go to state 157
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 158
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 159
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    expr_or_type      go to state 429
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    non_expr_type     go to state 161
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 162
    recvchantype      go to state 163
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 164
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 317

  123 pexpr_no_paren: pexpr '.' sym .

    $default  reduce using rule 123 (pexpr_no_paren)


state 318

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr
  126 pexpr_no_paren: pexpr '[' expr . ']'
  282 oexpr: expr .

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196
    ']'      shift, and go to state 430

    $default  reduce using rule 282 (oexpr)


state 319

  127 pexpr_no_paren: pexpr '[' oexpr . ':' oexpr ']'

    ':'  shift, and go to state 431


state 320

  253 non_dcl_stmt: labelname ':' $@13 . stmt

    error       shift, and go to state 323
    LLITERAL    shift, and go to state 35
    LBREAK      shift, and go to state 36
    LCHAN       shift, and go to state 37
    LCONST      shift, and go to state 38
    LCONTINUE   shift, and go to state 39
    LDEFER      shift, and go to state 40
    LFALL       shift, and go to state 41
    LFOR        shift, and go to state 42
    LFUNC       shift, and go to state 111
    LGO         shift, and go to state 44
    LGOTO       shift, and go to state 45
    LIF         shift, and go to state 46
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LRETURN     shift, and go to state 49
    LSELECT     shift, and go to state 50
    LSTRUCT     shift, and go to state 51
    LSWITCH     shift, and go to state 52
    LTYPE       shift, and go to state 53
    LVAR        shift, and go to state 54
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 324
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    LCASE     reduce using rule 242 (stmt)
    LDEFAULT  reduce using rule 242 (stmt)
    ';'       reduce using rule 242 (stmt)
    '}'       reduce using rule 242 (stmt)

    common_dcl        go to state 325
    lconst            go to state 67
    simple_stmt       go to state 68
    compound_stmt     go to state 326
    for_stmt          go to state 69
    if_stmt           go to state 70
    switch_stmt       go to state 71
    select_stmt       go to state 72
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    new_name          go to state 78
    sym               go to state 79
    hidden_importsym  go to state 13
    name              go to state 80
    labelname         go to state 81
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    stmt              go to state 432
    non_dcl_stmt      go to state 328
    expr_list         go to state 92


state 321

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr
  129 pexpr_no_paren: convtype '(' expr . ')'

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196
    ')'      shift, and go to state 433


state 322

  130 pexpr_no_paren: comptype lbrace start_complit . braced_keyval_list '}'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 419
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 275 (braced_keyval_list)

    expr                go to state 420
    uexpr               go to state 74
    pseudocall          go to state 75
    pexpr_no_paren      go to state 76
    keyval              go to state 421
    complitexpr         go to state 422
    pexpr               go to state 77
    sym                 go to state 115
    hidden_importsym    go to state 13
    name                go to state 80
    convtype            go to state 82
    comptype            go to state 83
    othertype           go to state 84
    structtype          go to state 85
    interfacetype       go to state 86
    fntype              go to state 88
    fnlitdcl            go to state 89
    fnliteral           go to state 90
    keyval_list         go to state 423
    braced_keyval_list  go to state 434


state 323

  246 stmt: error .

    $default  reduce using rule 246 (stmt)


state 324

   59 compound_stmt: '{' . $@3 stmt_list '}'

    $default  reduce using rule 58 ($@3)

    $@3  go to state 435


state 325

  244 stmt: common_dcl .

    $default  reduce using rule 244 (stmt)


state 326

  243 stmt: compound_stmt .

    $default  reduce using rule 243 (stmt)


state 327

  261 stmt_list: stmt .

    $default  reduce using rule 261 (stmt_list)


state 328

  245 stmt: non_dcl_stmt .

    $default  reduce using rule 245 (stmt)


state 329

  207 fnliteral: fnlitdcl lbrace stmt_list . '}'
  262 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 436
    '}'  shift, and go to state 437


state 330

   51 simple_stmt: expr_list LCOLAS expr_list .
  268 expr_list: expr_list . ',' expr

    ','  shift, and go to state 208

    $default  reduce using rule 51 (simple_stmt)


state 331

   50 simple_stmt: expr_list '=' expr_list .
  268 expr_list: expr_list . ',' expr

    ','  shift, and go to state 208

    $default  reduce using rule 50 (simple_stmt)


state 332

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr
  268 expr_list: expr_list ',' expr .

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 268 (expr_list)


state 333

  316 hidden_type_misc: LCHAN . hidden_type_non_recv_chan
  317                 | LCHAN . '(' hidden_type_recv_chan ')'
  318                 | LCHAN . LCOMM hidden_type

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 438
    '*'         shift, and go to state 340
    '('         shift, and go to state 439
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym           go to state 343
    hidden_type_non_recv_chan  go to state 440
    hidden_type_misc           go to state 441
    hidden_type_func           go to state 442


state 334

  320 hidden_type_func: LFUNC . '(' ohidden_funarg_list ')' ohidden_funres

    '('  shift, and go to state 443


state 335

  314 hidden_type_misc: LINTERFACE . '{' ohidden_interfacedcl_list '}'

    '{'  shift, and go to state 444


state 336

  312 hidden_type_misc: LMAP . '[' hidden_type ']' hidden_type

    '['  shift, and go to state 445


state 337

  309 hidden_type_misc: LNAME .

    $default  reduce using rule 309 (hidden_type_misc)


state 338

  313 hidden_type_misc: LSTRUCT . '{' ohidden_structdcl_list '}'

    '{'  shift, and go to state 446


state 339

  319 hidden_type_recv_chan: LCOMM . LCHAN hidden_type

    LCHAN  shift, and go to state 447


state 340

  315 hidden_type_misc: '*' . hidden_type

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 448
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 341

  297 hidden_import: LCONST hidden_pkg_importsym '=' . hidden_constant ';'

    LLITERAL  shift, and go to state 449
    LNAME     shift, and go to state 9
    '-'       shift, and go to state 450
    '('       shift, and go to state 451
    '?'       shift, and go to state 10
    '@'       shift, and go to state 11

    sym               go to state 452
    hidden_importsym  go to state 13
    hidden_literal    go to state 453
    hidden_constant   go to state 454


state 342

  310 hidden_type_misc: '[' . ']' hidden_type
  311                 | '[' . LLITERAL ']' hidden_type

    LLITERAL  shift, and go to state 455
    ']'       shift, and go to state 456


state 343

  308 hidden_type_misc: hidden_importsym .

    $default  reduce using rule 308 (hidden_type_misc)


state 344

  298 hidden_import: LCONST hidden_pkg_importsym hidden_type . '=' hidden_constant ';'

    '='  shift, and go to state 457


state 345

  303 hidden_type: hidden_type_misc .

    $default  reduce using rule 303 (hidden_type)


state 346

  304 hidden_type: hidden_type_recv_chan .

    $default  reduce using rule 304 (hidden_type)


state 347

  305 hidden_type: hidden_type_func .

    $default  reduce using rule 305 (hidden_type)


state 348

  321 hidden_funarg: sym . hidden_type oliteral
  322              | sym . LDDD hidden_type oliteral

    LCHAN       shift, and go to state 333
    LDDD        shift, and go to state 458
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 459
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 349

  337 hidden_funarg_list: hidden_funarg .

    $default  reduce using rule 337 (hidden_funarg_list)


state 350

  199 hidden_fndcl: '(' hidden_funarg_list . ')' sym '(' ohidden_funarg_list ')' ohidden_funres
  338 hidden_funarg_list: hidden_funarg_list . ',' hidden_funarg

    ')'  shift, and go to state 460
    ','  shift, and go to state 461


state 351

  300 hidden_import: LFUNC hidden_fndcl fnbody . ';'

    ';'  shift, and go to state 462


state 352

  198 hidden_fndcl: hidden_pkg_importsym '(' . ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 287 (ohidden_funarg_list)

    sym                  go to state 348
    hidden_importsym     go to state 13
    ohidden_funarg_list  go to state 463
    hidden_funarg        go to state 349
    hidden_funarg_list   go to state 464


state 353

  295 hidden_import: LIMPORT LNAME LLITERAL . ';'

    ';'  shift, and go to state 465


state 354

  299 hidden_import: LTYPE hidden_pkgtype hidden_type . ';'

    ';'  shift, and go to state 466


state 355

  296 hidden_import: LVAR hidden_pkg_importsym hidden_type . ';'

    ';'  shift, and go to state 467


state 356

   13 import_stmt_list: import_stmt_list ';' import_stmt .

    $default  reduce using rule 13 (import_stmt_list)


state 357

    9 import: LIMPORT '(' import_stmt_list osemi ')' .

    $default  reduce using rule 9 (import)


state 358

  200 fntype: LFUNC '(' oarg_type_list_ocomma . ')' fnres

    ')'  shift, and go to state 468


state 359

  190 recvchantype: LCOMM LCHAN . ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 407
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 360

  162 ntype: '(' ntype . ')'

    ')'  shift, and go to state 469


state 361

  171 non_recvchantype: '(' ntype ')' .

    $default  reduce using rule 171 (non_recvchantype)


state 362

  181 dotname: name '.' sym .

    $default  reduce using rule 181 (dotname)


state 363

   65 loop_body: LBODY . $@5 stmt_list '}'

    $default  reduce using rule 64 ($@5)

    $@5  go to state 470


state 364

   71 for_body: for_header loop_body .

    $default  reduce using rule 71 (for_body)


state 365

   51 simple_stmt: expr_list LCOLAS . expr_list
   67 range_stmt: expr_list LCOLAS . LRANGE expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LRANGE      shift, and go to state 471
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 136
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 330


state 366

   50 simple_stmt: expr_list '=' . expr_list
   66 range_stmt: expr_list '=' . LRANGE expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LRANGE      shift, and go to state 472
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 136
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 331


state 367

   68 for_header: osimple_stmt ';' . osimple_stmt ';' osimple_stmt

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 285 (osimple_stmt)

    simple_stmt       go to state 234
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 92
    osimple_stmt      go to state 473


state 368

  156 dotdotdot: LDDD ntype .

    $default  reduce using rule 156 (dotdotdot)


state 369

  235 arg_type: sym name_or_type .

    $default  reduce using rule 235 (arg_type)


state 370

  236 arg_type: sym dotdotdot .

    $default  reduce using rule 236 (arg_type)


state 371

  239 arg_type_list: arg_type_list ',' . arg_type
  280 ocomma: ',' .

    LCHAN       shift, and go to state 37
    LDDD        shift, and go to state 240
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 280 (ocomma)

    name_or_type      go to state 241
    sym               go to state 242
    hidden_importsym  go to state 13
    name              go to state 116
    dotdotdot         go to state 243
    ntype             go to state 244
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230
    arg_type          go to state 474


state 372

  241 oarg_type_list_ocomma: arg_type_list ocomma .

    $default  reduce using rule 241 (oarg_type_list_ocomma)


state 373

  197 fndcl: '(' oarg_type_list_ocomma ')' . sym '(' oarg_type_list_ocomma ')' fnres
  200 fntype: LFUNC '(' oarg_type_list_ocomma ')' . fnres

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 475
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 203 (fnres)

    sym               go to state 476
    hidden_importsym  go to state 13
    name              go to state 116
    fnret_type        go to state 477
    dotname           go to state 478
    othertype         go to state 479
    ptrtype           go to state 480
    recvchantype      go to state 481
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 482
    fnres             go to state 483


state 374

  196 fndcl: sym '(' oarg_type_list_ocomma . ')' fnres

    ')'  shift, and go to state 484


state 375

  202 fnbody: '{' stmt_list . '}'
  262 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 436
    '}'  shift, and go to state 485


state 376

   79 if_stmt: LIF $@7 if_header $@8 . loop_body $@9 else

    LBODY  shift, and go to state 363

    loop_body  go to state 486


state 377

   75 if_header: osimple_stmt ';' . osimple_stmt

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 285 (osimple_stmt)

    simple_stmt       go to state 234
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 92
    osimple_stmt      go to state 487


state 378

  228 packname: LNAME '.' . sym

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    sym               go to state 488
    hidden_importsym  go to state 13


state 379

  227 packname: LNAME .
  228         | LNAME . '.' sym

    '.'  shift, and go to state 378

    $default  reduce using rule 227 (packname)


state 380

  232 interfacedcl: '(' packname . ')'

    ')'  shift, and go to state 489


state 381

  233 indcl: '(' . oarg_type_list_ocomma ')' fnres

    LCHAN       shift, and go to state 37
    LDDD        shift, and go to state 240
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 240 (oarg_type_list_ocomma)

    name_or_type           go to state 241
    sym                    go to state 242
    hidden_importsym       go to state 13
    name                   go to state 116
    dotdotdot              go to state 243
    ntype                  go to state 244
    dotname                go to state 226
    othertype              go to state 227
    ptrtype                go to state 228
    recvchantype           go to state 229
    structtype             go to state 85
    interfacetype          go to state 86
    fntype                 go to state 230
    arg_type               go to state 245
    arg_type_list          go to state 246
    oarg_type_list_ocomma  go to state 490


state 382

  230 interfacedcl: new_name indcl .

    $default  reduce using rule 230 (interfacedcl)


state 383

  220 interfacedcl_list: interfacedcl_list ';' . interfacedcl
  278 osemi: ';' .

    LNAME  shift, and go to state 253
    '('    shift, and go to state 254
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 278 (osemi)

    new_name          go to state 256
    sym               go to state 110
    hidden_importsym  go to state 13
    packname          go to state 258
    interfacedcl      go to state 491


state 384

  193 interfacetype: LINTERFACE lbrace interfacedcl_list osemi . '}'

    '}'  shift, and go to state 492


state 385

  186 othertype: LMAP '[' ntype ']' . ntype

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 493
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 386

   63 caseblock_list: caseblock_list . caseblock
   87 select_stmt: LSELECT $@12 LBODY caseblock_list . '}'

    LCASE     shift, and go to state 494
    LDEFAULT  shift, and go to state 495
    '}'       shift, and go to state 496

    case       go to state 497
    caseblock  go to state 498


state 387

  226 structdcl: '*' '(' . embed ')' oliteral

    LNAME  shift, and go to state 379

    packname  go to state 268
    embed     go to state 499


state 388

  224 structdcl: '*' embed . oliteral

    LLITERAL  shift, and go to state 393

    $default  reduce using rule 293 (oliteral)

    oliteral  go to state 500


state 389

  225 structdcl: '(' '*' . embed ')' oliteral

    LNAME  shift, and go to state 379

    packname  go to state 268
    embed     go to state 501


state 390

  223 structdcl: '(' embed . ')' oliteral

    ')'  shift, and go to state 502


state 391

  218 structdcl_list: structdcl_list ';' . structdcl
  278 osemi: ';' .

    LNAME  shift, and go to state 253
    '*'    shift, and go to state 262
    '('    shift, and go to state 263
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 278 (osemi)

    new_name          go to state 265
    sym               go to state 110
    hidden_importsym  go to state 13
    structdcl         go to state 503
    packname          go to state 268
    embed             go to state 269
    new_name_list     go to state 270


state 392

  191 structtype: LSTRUCT lbrace structdcl_list osemi . '}'

    '}'  shift, and go to state 504


state 393

  294 oliteral: LLITERAL .

    $default  reduce using rule 294 (oliteral)


state 394

  222 structdcl: embed oliteral .

    $default  reduce using rule 222 (structdcl)


state 395

  264 new_name_list: new_name_list ',' . new_name

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    new_name          go to state 505
    sym               go to state 110
    hidden_importsym  go to state 13


state 396

  221 structdcl: new_name_list ntype . oliteral

    LLITERAL  shift, and go to state 393

    $default  reduce using rule 293 (oliteral)

    oliteral  go to state 506


state 397

   85 switch_stmt: LSWITCH $@10 if_header $@11 . LBODY caseblock_list '}'

    LBODY  shift, and go to state 507


state 398

  216 typedcl_list: typedcl_list ';' . typedcl
  278 osemi: ';' .

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 278 (osemi)

    typedclname       go to state 143
    typedcl           go to state 508
    sym               go to state 145
    hidden_importsym  go to state 13


state 399

   35 common_dcl: LTYPE '(' typedcl_list osemi . ')'

    ')'  shift, and go to state 509


state 400

  212 vardcl_list: vardcl_list ';' . vardcl
  278 osemi: ';' .

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 278 (osemi)

    vardcl            go to state 510
    dcl_name          go to state 148
    sym               go to state 149
    hidden_importsym  go to state 13
    dcl_name_list     go to state 150


state 401

   28 common_dcl: LVAR '(' vardcl_list osemi . ')'

    ')'  shift, and go to state 511


state 402

   40 vardcl: dcl_name_list '=' expr_list .
  268 expr_list: expr_list . ',' expr

    ','  shift, and go to state 208

    $default  reduce using rule 40 (vardcl)


state 403

  266 dcl_name_list: dcl_name_list ',' dcl_name .

    $default  reduce using rule 266 (dcl_name_list)


state 404

   39 vardcl: dcl_name_list ntype '=' . expr_list

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 136
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 512


state 405

  185 othertype: LCHAN LCOMM . ntype
  190 recvchantype: LCOMM . LCHAN ntype

    LCHAN       shift, and go to state 282
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 225
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 406

  162 ntype: '(' . ntype ')'
  171 non_recvchantype: '(' . ntype ')'

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 513
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 407

  190 recvchantype: LCOMM LCHAN ntype .

    $default  reduce using rule 190 (recvchantype)


state 408

  161 ntype: dotname .
  170 non_recvchantype: dotname .

    LBODY     reduce using rule 170 (non_recvchantype)
    '('       reduce using rule 170 (non_recvchantype)
    '{'       reduce using rule 170 (non_recvchantype)
    $default  reduce using rule 161 (ntype)


state 409

  159 ntype: othertype .
  168 non_recvchantype: othertype .

    LBODY     reduce using rule 168 (non_recvchantype)
    '('       reduce using rule 168 (non_recvchantype)
    '{'       reduce using rule 168 (non_recvchantype)
    $default  reduce using rule 159 (ntype)


state 410

  160 ntype: ptrtype .
  169 non_recvchantype: ptrtype .

    LBODY     reduce using rule 169 (non_recvchantype)
    '('       reduce using rule 169 (non_recvchantype)
    '{'       reduce using rule 169 (non_recvchantype)
    $default  reduce using rule 160 (ntype)


state 411

  158 ntype: fntype .
  167 non_recvchantype: fntype .

    LBODY     reduce using rule 167 (non_recvchantype)
    '('       reduce using rule 167 (non_recvchantype)
    '{'       reduce using rule 167 (non_recvchantype)
    $default  reduce using rule 158 (ntype)


state 412

  132 pexpr_no_paren: '(' expr_or_type ')' '{' . start_complit braced_keyval_list '}'

    $default  reduce using rule 134 (start_complit)

    start_complit  go to state 514


state 413

  183 othertype: '[' LDDD ']' ntype .

    $default  reduce using rule 183 (othertype)


state 414

  182 othertype: '[' oexpr ']' ntype .

    $default  reduce using rule 182 (othertype)


state 415

   32 common_dcl: lconst '(' constdcl ';' . constdcl_list osemi ')'
  278 osemi: ';' .

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 278 (osemi)

    constdcl          go to state 515
    constdcl1         go to state 516
    dcl_name          go to state 148
    sym               go to state 149
    hidden_importsym  go to state 13
    constdcl_list     go to state 517
    dcl_name_list     go to state 518


state 416

   31 common_dcl: lconst '(' constdcl osemi . ')'

    ')'  shift, and go to state 519


state 417

   42 constdcl: dcl_name_list '=' expr_list .
  268 expr_list: expr_list . ',' expr

    ','  shift, and go to state 208

    $default  reduce using rule 42 (constdcl)


state 418

   41 constdcl: dcl_name_list ntype '=' . expr_list

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 136
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 520


state 419

  137 complitexpr: '{' . start_complit braced_keyval_list '}'

    $default  reduce using rule 134 (start_complit)

    start_complit  go to state 521


state 420

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr
  135 keyval: expr . ':' complitexpr
  136 complitexpr: expr .

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196
    ':'      shift, and go to state 522

    $default  reduce using rule 136 (complitexpr)


state 421

  271 keyval_list: keyval .

    $default  reduce using rule 271 (keyval_list)


state 422

  272 keyval_list: complitexpr .

    $default  reduce using rule 272 (keyval_list)


state 423

  273 keyval_list: keyval_list . ',' keyval
  274            | keyval_list . ',' complitexpr
  276 braced_keyval_list: keyval_list . ocomma

    ','  shift, and go to state 523

    $default  reduce using rule 279 (ocomma)

    ocomma  go to state 524


state 424

  131 pexpr_no_paren: pexpr_no_paren '{' start_complit braced_keyval_list . '}'

    '}'  shift, and go to state 525


state 425

  120 pseudocall: pexpr '(' expr_or_type_list LDDD . ocomma ')'

    ','  shift, and go to state 526

    $default  reduce using rule 279 (ocomma)

    ocomma  go to state 527


state 426

  270 expr_or_type_list: expr_or_type_list ',' . expr_or_type
  280 ocomma: ',' .

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 157
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 158
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 280 (ocomma)

    expr              go to state 159
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    expr_or_type      go to state 528
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    non_expr_type     go to state 161
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 162
    recvchantype      go to state 163
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 164
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 427

  119 pseudocall: pexpr '(' expr_or_type_list ocomma . ')'

    ')'  shift, and go to state 529


state 428

  125 pexpr_no_paren: pexpr '.' '(' LTYPE . ')'

    ')'  shift, and go to state 530


state 429

  124 pexpr_no_paren: pexpr '.' '(' expr_or_type . ')'

    ')'  shift, and go to state 531


state 430

  126 pexpr_no_paren: pexpr '[' expr ']' .

    $default  reduce using rule 126 (pexpr_no_paren)


state 431

  127 pexpr_no_paren: pexpr '[' oexpr ':' . oexpr ']'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 281 (oexpr)

    expr              go to state 168
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    oexpr             go to state 532


state 432

  253 non_dcl_stmt: labelname ':' $@13 stmt .

    $default  reduce using rule 253 (non_dcl_stmt)


state 433

  129 pexpr_no_paren: convtype '(' expr ')' .

    $default  reduce using rule 129 (pexpr_no_paren)


state 434

  130 pexpr_no_paren: comptype lbrace start_complit braced_keyval_list . '}'

    '}'  shift, and go to state 533


state 435

   59 compound_stmt: '{' $@3 . stmt_list '}'

    error       shift, and go to state 323
    LLITERAL    shift, and go to state 35
    LBREAK      shift, and go to state 36
    LCHAN       shift, and go to state 37
    LCONST      shift, and go to state 38
    LCONTINUE   shift, and go to state 39
    LDEFER      shift, and go to state 40
    LFALL       shift, and go to state 41
    LFOR        shift, and go to state 42
    LFUNC       shift, and go to state 111
    LGO         shift, and go to state 44
    LGOTO       shift, and go to state 45
    LIF         shift, and go to state 46
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LRETURN     shift, and go to state 49
    LSELECT     shift, and go to state 50
    LSTRUCT     shift, and go to state 51
    LSWITCH     shift, and go to state 52
    LTYPE       shift, and go to state 53
    LVAR        shift, and go to state 54
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 324
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    ';'  reduce using rule 242 (stmt)
    '}'  reduce using rule 242 (stmt)

    common_dcl        go to state 325
    lconst            go to state 67
    simple_stmt       go to state 68
    compound_stmt     go to state 326
    for_stmt          go to state 69
    if_stmt           go to state 70
    switch_stmt       go to state 71
    select_stmt       go to state 72
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    new_name          go to state 78
    sym               go to state 79
    hidden_importsym  go to state 13
    name              go to state 80
    labelname         go to state 81
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    stmt              go to state 327
    non_dcl_stmt      go to state 328
    stmt_list         go to state 534
    expr_list         go to state 92


state 436

  262 stmt_list: stmt_list ';' . stmt

    error       shift, and go to state 323
    LLITERAL    shift, and go to state 35
    LBREAK      shift, and go to state 36
    LCHAN       shift, and go to state 37
    LCONST      shift, and go to state 38
    LCONTINUE   shift, and go to state 39
    LDEFER      shift, and go to state 40
    LFALL       shift, and go to state 41
    LFOR        shift, and go to state 42
    LFUNC       shift, and go to state 111
    LGO         shift, and go to state 44
    LGOTO       shift, and go to state 45
    LIF         shift, and go to state 46
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LRETURN     shift, and go to state 49
    LSELECT     shift, and go to state 50
    LSTRUCT     shift, and go to state 51
    LSWITCH     shift, and go to state 52
    LTYPE       shift, and go to state 53
    LVAR        shift, and go to state 54
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 324
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    LCASE     reduce using rule 242 (stmt)
    LDEFAULT  reduce using rule 242 (stmt)
    ';'       reduce using rule 242 (stmt)
    '}'       reduce using rule 242 (stmt)

    common_dcl        go to state 325
    lconst            go to state 67
    simple_stmt       go to state 68
    compound_stmt     go to state 326
    for_stmt          go to state 69
    if_stmt           go to state 70
    switch_stmt       go to state 71
    select_stmt       go to state 72
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    new_name          go to state 78
    sym               go to state 79
    hidden_importsym  go to state 13
    name              go to state 80
    labelname         go to state 81
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    stmt              go to state 535
    non_dcl_stmt      go to state 328
    expr_list         go to state 92


state 437

  207 fnliteral: fnlitdcl lbrace stmt_list '}' .

    $default  reduce using rule 207 (fnliteral)


state 438

  318 hidden_type_misc: LCHAN LCOMM . hidden_type

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 536
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 439

  317 hidden_type_misc: LCHAN '(' . hidden_type_recv_chan ')'

    LCOMM  shift, and go to state 339

    hidden_type_recv_chan  go to state 537


state 440

  316 hidden_type_misc: LCHAN hidden_type_non_recv_chan .

    $default  reduce using rule 316 (hidden_type_misc)


state 441

  306 hidden_type_non_recv_chan: hidden_type_misc .

    $default  reduce using rule 306 (hidden_type_non_recv_chan)


state 442

  307 hidden_type_non_recv_chan: hidden_type_func .

    $default  reduce using rule 307 (hidden_type_non_recv_chan)


state 443

  320 hidden_type_func: LFUNC '(' . ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 287 (ohidden_funarg_list)

    sym                  go to state 348
    hidden_importsym     go to state 13
    ohidden_funarg_list  go to state 538
    hidden_funarg        go to state 349
    hidden_funarg_list   go to state 464


state 444

  314 hidden_type_misc: LINTERFACE '{' . ohidden_interfacedcl_list '}'

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 539
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 291 (ohidden_interfacedcl_list)

    sym                        go to state 540
    hidden_importsym           go to state 541
    ohidden_interfacedcl_list  go to state 542
    hidden_type                go to state 543
    hidden_type_misc           go to state 345
    hidden_type_recv_chan      go to state 346
    hidden_type_func           go to state 347
    hidden_interfacedcl        go to state 544
    hidden_interfacedcl_list   go to state 545


state 445

  312 hidden_type_misc: LMAP '[' . hidden_type ']' hidden_type

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 546
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 446

  313 hidden_type_misc: LSTRUCT '{' . ohidden_structdcl_list '}'

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 289 (ohidden_structdcl_list)

    sym                     go to state 547
    hidden_importsym        go to state 13
    ohidden_structdcl_list  go to state 548
    hidden_structdcl        go to state 549
    hidden_structdcl_list   go to state 550


state 447

  319 hidden_type_recv_chan: LCOMM LCHAN . hidden_type

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 551
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 448

  315 hidden_type_misc: '*' hidden_type .

    $default  reduce using rule 315 (hidden_type_misc)


state 449

  330 hidden_literal: LLITERAL .

    $default  reduce using rule 330 (hidden_literal)


state 450

  331 hidden_literal: '-' . LLITERAL

    LLITERAL  shift, and go to state 552


state 451

  334 hidden_constant: '(' . hidden_literal '+' hidden_literal ')'

    LLITERAL  shift, and go to state 449
    LNAME     shift, and go to state 9
    '-'       shift, and go to state 450
    '?'       shift, and go to state 10
    '@'       shift, and go to state 11

    sym               go to state 452
    hidden_importsym  go to state 13
    hidden_literal    go to state 553


state 452

  332 hidden_literal: sym .

    $default  reduce using rule 332 (hidden_literal)


state 453

  333 hidden_constant: hidden_literal .

    $default  reduce using rule 333 (hidden_constant)


state 454

  297 hidden_import: LCONST hidden_pkg_importsym '=' hidden_constant . ';'

    ';'  shift, and go to state 554


state 455

  311 hidden_type_misc: '[' LLITERAL . ']' hidden_type

    ']'  shift, and go to state 555


state 456

  310 hidden_type_misc: '[' ']' . hidden_type

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 556
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 457

  298 hidden_import: LCONST hidden_pkg_importsym hidden_type '=' . hidden_constant ';'

    LLITERAL  shift, and go to state 449
    LNAME     shift, and go to state 9
    '-'       shift, and go to state 450
    '('       shift, and go to state 451
    '?'       shift, and go to state 10
    '@'       shift, and go to state 11

    sym               go to state 452
    hidden_importsym  go to state 13
    hidden_literal    go to state 453
    hidden_constant   go to state 557


state 458

  322 hidden_funarg: sym LDDD . hidden_type oliteral

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 558
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 459

  321 hidden_funarg: sym hidden_type . oliteral

    LLITERAL  shift, and go to state 393

    $default  reduce using rule 293 (oliteral)

    oliteral  go to state 559


state 460

  199 hidden_fndcl: '(' hidden_funarg_list ')' . sym '(' ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    sym               go to state 560
    hidden_importsym  go to state 13


state 461

  338 hidden_funarg_list: hidden_funarg_list ',' . hidden_funarg

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    sym               go to state 348
    hidden_importsym  go to state 13
    hidden_funarg     go to state 561


state 462

  300 hidden_import: LFUNC hidden_fndcl fnbody ';' .

    $default  reduce using rule 300 (hidden_import)


state 463

  198 hidden_fndcl: hidden_pkg_importsym '(' ohidden_funarg_list . ')' ohidden_funres

    ')'  shift, and go to state 562


state 464

  288 ohidden_funarg_list: hidden_funarg_list .
  338 hidden_funarg_list: hidden_funarg_list . ',' hidden_funarg

    ','  shift, and go to state 461

    $default  reduce using rule 288 (ohidden_funarg_list)


state 465

  295 hidden_import: LIMPORT LNAME LLITERAL ';' .

    $default  reduce using rule 295 (hidden_import)


state 466

  299 hidden_import: LTYPE hidden_pkgtype hidden_type ';' .

    $default  reduce using rule 299 (hidden_import)


state 467

  296 hidden_import: LVAR hidden_pkg_importsym hidden_type ';' .

    $default  reduce using rule 296 (hidden_import)


state 468

  200 fntype: LFUNC '(' oarg_type_list_ocomma ')' . fnres

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 475
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 203 (fnres)

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    fnret_type        go to state 477
    dotname           go to state 478
    othertype         go to state 479
    ptrtype           go to state 480
    recvchantype      go to state 481
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 482
    fnres             go to state 483


state 469

  162 ntype: '(' ntype ')' .

    $default  reduce using rule 162 (ntype)


state 470

   65 loop_body: LBODY $@5 . stmt_list '}'

    error       shift, and go to state 323
    LLITERAL    shift, and go to state 35
    LBREAK      shift, and go to state 36
    LCHAN       shift, and go to state 37
    LCONST      shift, and go to state 38
    LCONTINUE   shift, and go to state 39
    LDEFER      shift, and go to state 40
    LFALL       shift, and go to state 41
    LFOR        shift, and go to state 42
    LFUNC       shift, and go to state 111
    LGO         shift, and go to state 44
    LGOTO       shift, and go to state 45
    LIF         shift, and go to state 46
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LRETURN     shift, and go to state 49
    LSELECT     shift, and go to state 50
    LSTRUCT     shift, and go to state 51
    LSWITCH     shift, and go to state 52
    LTYPE       shift, and go to state 53
    LVAR        shift, and go to state 54
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 324
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    ';'  reduce using rule 242 (stmt)
    '}'  reduce using rule 242 (stmt)

    common_dcl        go to state 325
    lconst            go to state 67
    simple_stmt       go to state 68
    compound_stmt     go to state 326
    for_stmt          go to state 69
    if_stmt           go to state 70
    switch_stmt       go to state 71
    select_stmt       go to state 72
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    new_name          go to state 78
    sym               go to state 79
    hidden_importsym  go to state 13
    name              go to state 80
    labelname         go to state 81
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    stmt              go to state 327
    non_dcl_stmt      go to state 328
    stmt_list         go to state 563
    expr_list         go to state 92


state 471

   67 range_stmt: expr_list LCOLAS LRANGE . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 564
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 472

   66 range_stmt: expr_list '=' LRANGE . expr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 565
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 473

   68 for_header: osimple_stmt ';' osimple_stmt . ';' osimple_stmt

    ';'  shift, and go to state 566


state 474

  239 arg_type_list: arg_type_list ',' arg_type .

    $default  reduce using rule 239 (arg_type_list)


state 475

  205 fnres: '(' . oarg_type_list_ocomma ')'

    LCHAN       shift, and go to state 37
    LDDD        shift, and go to state 240
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 240 (oarg_type_list_ocomma)

    name_or_type           go to state 241
    sym                    go to state 242
    hidden_importsym       go to state 13
    name                   go to state 116
    dotdotdot              go to state 243
    ntype                  go to state 244
    dotname                go to state 226
    othertype              go to state 227
    ptrtype                go to state 228
    recvchantype           go to state 229
    structtype             go to state 85
    interfacetype          go to state 86
    fntype                 go to state 230
    arg_type               go to state 245
    arg_type_list          go to state 246
    oarg_type_list_ocomma  go to state 567


state 476

  153 name: sym .
  197 fndcl: '(' oarg_type_list_ocomma ')' sym . '(' oarg_type_list_ocomma ')' fnres

    '('  shift, and go to state 568

    $default  reduce using rule 153 (name)


state 477

  204 fnres: fnret_type .

    $default  reduce using rule 204 (fnres)


state 478

  179 fnret_type: dotname .

    $default  reduce using rule 179 (fnret_type)


state 479

  177 fnret_type: othertype .

    $default  reduce using rule 177 (fnret_type)


state 480

  178 fnret_type: ptrtype .

    $default  reduce using rule 178 (fnret_type)


state 481

  175 fnret_type: recvchantype .

    $default  reduce using rule 175 (fnret_type)


state 482

  176 fnret_type: fntype .

    $default  reduce using rule 176 (fnret_type)


state 483

  200 fntype: LFUNC '(' oarg_type_list_ocomma ')' fnres .

    $default  reduce using rule 200 (fntype)


state 484

  196 fndcl: sym '(' oarg_type_list_ocomma ')' . fnres

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 475
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 203 (fnres)

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    fnret_type        go to state 477
    dotname           go to state 478
    othertype         go to state 479
    ptrtype           go to state 480
    recvchantype      go to state 481
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 482
    fnres             go to state 569


state 485

  202 fnbody: '{' stmt_list '}' .

    $default  reduce using rule 202 (fnbody)


state 486

   79 if_stmt: LIF $@7 if_header $@8 loop_body . $@9 else

    $default  reduce using rule 78 ($@9)

    $@9  go to state 570


state 487

   75 if_header: osimple_stmt ';' osimple_stmt .

    $default  reduce using rule 75 (if_header)


state 488

  228 packname: LNAME '.' sym .

    $default  reduce using rule 228 (packname)


state 489

  232 interfacedcl: '(' packname ')' .

    $default  reduce using rule 232 (interfacedcl)


state 490

  233 indcl: '(' oarg_type_list_ocomma . ')' fnres

    ')'  shift, and go to state 571


state 491

  220 interfacedcl_list: interfacedcl_list ';' interfacedcl .

    $default  reduce using rule 220 (interfacedcl_list)


state 492

  193 interfacetype: LINTERFACE lbrace interfacedcl_list osemi '}' .

    $default  reduce using rule 193 (interfacetype)


state 493

  186 othertype: LMAP '[' ntype ']' ntype .

    $default  reduce using rule 186 (othertype)


state 494

   54 case: LCASE . expr_or_type_list ':'
   55     | LCASE . expr_or_type_list '=' expr ':'
   56     | LCASE . expr_or_type_list LCOLAS expr ':'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 157
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 158
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr               go to state 159
    uexpr              go to state 74
    pseudocall         go to state 75
    pexpr_no_paren     go to state 76
    pexpr              go to state 77
    expr_or_type       go to state 314
    sym                go to state 115
    hidden_importsym   go to state 13
    name               go to state 80
    non_expr_type      go to state 161
    convtype           go to state 82
    comptype           go to state 83
    othertype          go to state 162
    recvchantype       go to state 163
    structtype         go to state 85
    interfacetype      go to state 86
    fntype             go to state 164
    fnlitdcl           go to state 89
    fnliteral          go to state 90
    expr_or_type_list  go to state 572


state 495

   57 case: LDEFAULT . ':'

    ':'  shift, and go to state 573


state 496

   87 select_stmt: LSELECT $@12 LBODY caseblock_list '}' .

    $default  reduce using rule 87 (select_stmt)


state 497

   61 caseblock: case . $@4 stmt_list

    $default  reduce using rule 60 ($@4)

    $@4  go to state 574


state 498

   63 caseblock_list: caseblock_list caseblock .

    $default  reduce using rule 63 (caseblock_list)


state 499

  226 structdcl: '*' '(' embed . ')' oliteral

    ')'  shift, and go to state 575


state 500

  224 structdcl: '*' embed oliteral .

    $default  reduce using rule 224 (structdcl)


state 501

  225 structdcl: '(' '*' embed . ')' oliteral

    ')'  shift, and go to state 576


state 502

  223 structdcl: '(' embed ')' . oliteral

    LLITERAL  shift, and go to state 393

    $default  reduce using rule 293 (oliteral)

    oliteral  go to state 577


state 503

  218 structdcl_list: structdcl_list ';' structdcl .

    $default  reduce using rule 218 (structdcl_list)


state 504

  191 structtype: LSTRUCT lbrace structdcl_list osemi '}' .

    $default  reduce using rule 191 (structtype)


state 505

  264 new_name_list: new_name_list ',' new_name .

    $default  reduce using rule 264 (new_name_list)


state 506

  221 structdcl: new_name_list ntype oliteral .

    $default  reduce using rule 221 (structdcl)


state 507

   85 switch_stmt: LSWITCH $@10 if_header $@11 LBODY . caseblock_list '}'

    $default  reduce using rule 62 (caseblock_list)

    caseblock_list  go to state 578


state 508

  216 typedcl_list: typedcl_list ';' typedcl .

    $default  reduce using rule 216 (typedcl_list)


state 509

   35 common_dcl: LTYPE '(' typedcl_list osemi ')' .

    $default  reduce using rule 35 (common_dcl)


state 510

  212 vardcl_list: vardcl_list ';' vardcl .

    $default  reduce using rule 212 (vardcl_list)


state 511

   28 common_dcl: LVAR '(' vardcl_list osemi ')' .

    $default  reduce using rule 28 (common_dcl)


state 512

   39 vardcl: dcl_name_list ntype '=' expr_list .
  268 expr_list: expr_list . ',' expr

    ','  shift, and go to state 208

    $default  reduce using rule 39 (vardcl)


state 513

  162 ntype: '(' ntype . ')'
  171 non_recvchantype: '(' ntype . ')'

    ')'  shift, and go to state 579


state 514

  132 pexpr_no_paren: '(' expr_or_type ')' '{' start_complit . braced_keyval_list '}'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 419
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 275 (braced_keyval_list)

    expr                go to state 420
    uexpr               go to state 74
    pseudocall          go to state 75
    pexpr_no_paren      go to state 76
    keyval              go to state 421
    complitexpr         go to state 422
    pexpr               go to state 77
    sym                 go to state 115
    hidden_importsym    go to state 13
    name                go to state 80
    convtype            go to state 82
    comptype            go to state 83
    othertype           go to state 84
    structtype          go to state 85
    interfacetype       go to state 86
    fntype              go to state 88
    fnlitdcl            go to state 89
    fnliteral           go to state 90
    keyval_list         go to state 423
    braced_keyval_list  go to state 580


state 515

   43 constdcl1: constdcl .

    $default  reduce using rule 43 (constdcl1)


state 516

  213 constdcl_list: constdcl1 .

    $default  reduce using rule 213 (constdcl_list)


state 517

   32 common_dcl: lconst '(' constdcl ';' constdcl_list . osemi ')'
  214 constdcl_list: constdcl_list . ';' constdcl1

    ';'  shift, and go to state 581

    $default  reduce using rule 277 (osemi)

    osemi  go to state 582


state 518

   41 constdcl: dcl_name_list . ntype '=' expr_list
   42         | dcl_name_list . '=' expr_list
   44 constdcl1: dcl_name_list . ntype
   45          | dcl_name_list .
  266 dcl_name_list: dcl_name_list . ',' dcl_name

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '='         shift, and go to state 289
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11
    ','         shift, and go to state 280

    $default  reduce using rule 45 (constdcl1)

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    ntype             go to state 583
    dotname           go to state 226
    othertype         go to state 227
    ptrtype           go to state 228
    recvchantype      go to state 229
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 230


state 519

   31 common_dcl: lconst '(' constdcl osemi ')' .

    $default  reduce using rule 31 (common_dcl)


state 520

   41 constdcl: dcl_name_list ntype '=' expr_list .
  268 expr_list: expr_list . ',' expr

    ','  shift, and go to state 208

    $default  reduce using rule 41 (constdcl)


state 521

  137 complitexpr: '{' start_complit . braced_keyval_list '}'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 419
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 275 (braced_keyval_list)

    expr                go to state 420
    uexpr               go to state 74
    pseudocall          go to state 75
    pexpr_no_paren      go to state 76
    keyval              go to state 421
    complitexpr         go to state 422
    pexpr               go to state 77
    sym                 go to state 115
    hidden_importsym    go to state 13
    name                go to state 80
    convtype            go to state 82
    comptype            go to state 83
    othertype           go to state 84
    structtype          go to state 85
    interfacetype       go to state 86
    fntype              go to state 88
    fnlitdcl            go to state 89
    fnliteral           go to state 90
    keyval_list         go to state 423
    braced_keyval_list  go to state 584


state 522

  135 keyval: expr ':' . complitexpr

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 419
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 585
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    complitexpr       go to state 586
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 523

  273 keyval_list: keyval_list ',' . keyval
  274            | keyval_list ',' . complitexpr
  280 ocomma: ',' .

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 419
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 280 (ocomma)

    expr              go to state 420
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    keyval            go to state 587
    complitexpr       go to state 588
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 524

  276 braced_keyval_list: keyval_list ocomma .

    $default  reduce using rule 276 (braced_keyval_list)


state 525

  131 pexpr_no_paren: pexpr_no_paren '{' start_complit braced_keyval_list '}' .

    $default  reduce using rule 131 (pexpr_no_paren)


state 526

  280 ocomma: ',' .

    $default  reduce using rule 280 (ocomma)


state 527

  120 pseudocall: pexpr '(' expr_or_type_list LDDD ocomma . ')'

    ')'  shift, and go to state 589


state 528

  270 expr_or_type_list: expr_or_type_list ',' expr_or_type .

    $default  reduce using rule 270 (expr_or_type_list)


state 529

  119 pseudocall: pexpr '(' expr_or_type_list ocomma ')' .

    $default  reduce using rule 119 (pseudocall)


state 530

  125 pexpr_no_paren: pexpr '.' '(' LTYPE ')' .

    $default  reduce using rule 125 (pexpr_no_paren)


state 531

  124 pexpr_no_paren: pexpr '.' '(' expr_or_type ')' .

    $default  reduce using rule 124 (pexpr_no_paren)


state 532

  127 pexpr_no_paren: pexpr '[' oexpr ':' oexpr . ']'

    ']'  shift, and go to state 590


state 533

  130 pexpr_no_paren: comptype lbrace start_complit braced_keyval_list '}' .

    $default  reduce using rule 130 (pexpr_no_paren)


state 534

   59 compound_stmt: '{' $@3 stmt_list . '}'
  262 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 436
    '}'  shift, and go to state 591


state 535

  262 stmt_list: stmt_list ';' stmt .

    $default  reduce using rule 262 (stmt_list)


state 536

  318 hidden_type_misc: LCHAN LCOMM hidden_type .

    $default  reduce using rule 318 (hidden_type_misc)


state 537

  317 hidden_type_misc: LCHAN '(' hidden_type_recv_chan . ')'

    ')'  shift, and go to state 592


state 538

  320 hidden_type_func: LFUNC '(' ohidden_funarg_list . ')' ohidden_funres

    ')'  shift, and go to state 593


state 539

  149 sym: LNAME .
  309 hidden_type_misc: LNAME .

    '('       reduce using rule 149 (sym)
    $default  reduce using rule 309 (hidden_type_misc)


state 540

  324 hidden_interfacedcl: sym . '(' ohidden_funarg_list ')' ohidden_funres

    '('  shift, and go to state 594


state 541

  150 sym: hidden_importsym .
  308 hidden_type_misc: hidden_importsym .

    '('       reduce using rule 150 (sym)
    $default  reduce using rule 308 (hidden_type_misc)


state 542

  314 hidden_type_misc: LINTERFACE '{' ohidden_interfacedcl_list . '}'

    '}'  shift, and go to state 595


state 543

  325 hidden_interfacedcl: hidden_type .

    $default  reduce using rule 325 (hidden_interfacedcl)


state 544

  341 hidden_interfacedcl_list: hidden_interfacedcl .

    $default  reduce using rule 341 (hidden_interfacedcl_list)


state 545

  292 ohidden_interfacedcl_list: hidden_interfacedcl_list .
  342 hidden_interfacedcl_list: hidden_interfacedcl_list . ';' hidden_interfacedcl

    ';'  shift, and go to state 596

    $default  reduce using rule 292 (ohidden_interfacedcl_list)


state 546

  312 hidden_type_misc: LMAP '[' hidden_type . ']' hidden_type

    ']'  shift, and go to state 597


state 547

  323 hidden_structdcl: sym . hidden_type oliteral

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 598
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 548

  313 hidden_type_misc: LSTRUCT '{' ohidden_structdcl_list . '}'

    '}'  shift, and go to state 599


state 549

  339 hidden_structdcl_list: hidden_structdcl .

    $default  reduce using rule 339 (hidden_structdcl_list)


state 550

  290 ohidden_structdcl_list: hidden_structdcl_list .
  340 hidden_structdcl_list: hidden_structdcl_list . ';' hidden_structdcl

    ';'  shift, and go to state 600

    $default  reduce using rule 290 (ohidden_structdcl_list)


state 551

  319 hidden_type_recv_chan: LCOMM LCHAN hidden_type .

    $default  reduce using rule 319 (hidden_type_recv_chan)


state 552

  331 hidden_literal: '-' LLITERAL .

    $default  reduce using rule 331 (hidden_literal)


state 553

  334 hidden_constant: '(' hidden_literal . '+' hidden_literal ')'

    '+'  shift, and go to state 601


state 554

  297 hidden_import: LCONST hidden_pkg_importsym '=' hidden_constant ';' .

    $default  reduce using rule 297 (hidden_import)


state 555

  311 hidden_type_misc: '[' LLITERAL ']' . hidden_type

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 602
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 556

  310 hidden_type_misc: '[' ']' hidden_type .

    $default  reduce using rule 310 (hidden_type_misc)


state 557

  298 hidden_import: LCONST hidden_pkg_importsym hidden_type '=' hidden_constant . ';'

    ';'  shift, and go to state 603


state 558

  322 hidden_funarg: sym LDDD hidden_type . oliteral

    LLITERAL  shift, and go to state 393

    $default  reduce using rule 293 (oliteral)

    oliteral  go to state 604


state 559

  321 hidden_funarg: sym hidden_type oliteral .

    $default  reduce using rule 321 (hidden_funarg)


state 560

  199 hidden_fndcl: '(' hidden_funarg_list ')' sym . '(' ohidden_funarg_list ')' ohidden_funres

    '('  shift, and go to state 605


state 561

  338 hidden_funarg_list: hidden_funarg_list ',' hidden_funarg .

    $default  reduce using rule 338 (hidden_funarg_list)


state 562

  198 hidden_fndcl: hidden_pkg_importsym '(' ohidden_funarg_list ')' . ohidden_funres

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '('         shift, and go to state 606
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    $default  reduce using rule 326 (ohidden_funres)

    hidden_importsym       go to state 343
    hidden_type            go to state 607
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347
    ohidden_funres         go to state 608
    hidden_funres          go to state 609


state 563

   65 loop_body: LBODY $@5 stmt_list . '}'
  262 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 436
    '}'  shift, and go to state 610


state 564

   67 range_stmt: expr_list LCOLAS LRANGE expr .
   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 67 (range_stmt)


state 565

   66 range_stmt: expr_list '=' LRANGE expr .
   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 66 (range_stmt)


state 566

   68 for_header: osimple_stmt ';' osimple_stmt ';' . osimple_stmt

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 285 (osimple_stmt)

    simple_stmt       go to state 234
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    expr_list         go to state 92
    osimple_stmt      go to state 611


state 567

  205 fnres: '(' oarg_type_list_ocomma . ')'

    ')'  shift, and go to state 612


state 568

  197 fndcl: '(' oarg_type_list_ocomma ')' sym '(' . oarg_type_list_ocomma ')' fnres

    LCHAN       shift, and go to state 37
    LDDD        shift, and go to state 240
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 224
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 240 (oarg_type_list_ocomma)

    name_or_type           go to state 241
    sym                    go to state 242
    hidden_importsym       go to state 13
    name                   go to state 116
    dotdotdot              go to state 243
    ntype                  go to state 244
    dotname                go to state 226
    othertype              go to state 227
    ptrtype                go to state 228
    recvchantype           go to state 229
    structtype             go to state 85
    interfacetype          go to state 86
    fntype                 go to state 230
    arg_type               go to state 245
    arg_type_list          go to state 246
    oarg_type_list_ocomma  go to state 613


state 569

  196 fndcl: sym '(' oarg_type_list_ocomma ')' fnres .

    $default  reduce using rule 196 (fndcl)


state 570

   79 if_stmt: LIF $@7 if_header $@8 loop_body $@9 . else

    LELSE  shift, and go to state 614

    $default  reduce using rule 80 (else)

    else  go to state 615


state 571

  233 indcl: '(' oarg_type_list_ocomma ')' . fnres

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 475
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 203 (fnres)

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    fnret_type        go to state 477
    dotname           go to state 478
    othertype         go to state 479
    ptrtype           go to state 480
    recvchantype      go to state 481
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 482
    fnres             go to state 616


state 572

   54 case: LCASE expr_or_type_list . ':'
   55     | LCASE expr_or_type_list . '=' expr ':'
   56     | LCASE expr_or_type_list . LCOLAS expr ':'
  270 expr_or_type_list: expr_or_type_list . ',' expr_or_type

    LCOLAS  shift, and go to state 617
    '='     shift, and go to state 618
    ':'     shift, and go to state 619
    ','     shift, and go to state 620


state 573

   57 case: LDEFAULT ':' .

    $default  reduce using rule 57 (case)


state 574

   61 caseblock: case $@4 . stmt_list

    error       shift, and go to state 323
    LLITERAL    shift, and go to state 35
    LBREAK      shift, and go to state 36
    LCHAN       shift, and go to state 37
    LCONST      shift, and go to state 38
    LCONTINUE   shift, and go to state 39
    LDEFER      shift, and go to state 40
    LFALL       shift, and go to state 41
    LFOR        shift, and go to state 42
    LFUNC       shift, and go to state 111
    LGO         shift, and go to state 44
    LGOTO       shift, and go to state 45
    LIF         shift, and go to state 46
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LRETURN     shift, and go to state 49
    LSELECT     shift, and go to state 50
    LSTRUCT     shift, and go to state 51
    LSWITCH     shift, and go to state 52
    LTYPE       shift, and go to state 53
    LVAR        shift, and go to state 54
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '{'         shift, and go to state 324
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    LCASE     reduce using rule 242 (stmt)
    LDEFAULT  reduce using rule 242 (stmt)
    ';'       reduce using rule 242 (stmt)
    '}'       reduce using rule 242 (stmt)

    common_dcl        go to state 325
    lconst            go to state 67
    simple_stmt       go to state 68
    compound_stmt     go to state 326
    for_stmt          go to state 69
    if_stmt           go to state 70
    switch_stmt       go to state 71
    select_stmt       go to state 72
    expr              go to state 73
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    new_name          go to state 78
    sym               go to state 79
    hidden_importsym  go to state 13
    name              go to state 80
    labelname         go to state 81
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90
    stmt              go to state 327
    non_dcl_stmt      go to state 328
    stmt_list         go to state 621
    expr_list         go to state 92


state 575

  226 structdcl: '*' '(' embed ')' . oliteral

    LLITERAL  shift, and go to state 393

    $default  reduce using rule 293 (oliteral)

    oliteral  go to state 622


state 576

  225 structdcl: '(' '*' embed ')' . oliteral

    LLITERAL  shift, and go to state 393

    $default  reduce using rule 293 (oliteral)

    oliteral  go to state 623


state 577

  223 structdcl: '(' embed ')' oliteral .

    $default  reduce using rule 223 (structdcl)


state 578

   63 caseblock_list: caseblock_list . caseblock
   85 switch_stmt: LSWITCH $@10 if_header $@11 LBODY caseblock_list . '}'

    LCASE     shift, and go to state 494
    LDEFAULT  shift, and go to state 495
    '}'       shift, and go to state 624

    case       go to state 497
    caseblock  go to state 498


state 579

  162 ntype: '(' ntype ')' .
  171 non_recvchantype: '(' ntype ')' .

    LBODY     reduce using rule 171 (non_recvchantype)
    '('       reduce using rule 171 (non_recvchantype)
    '{'       reduce using rule 171 (non_recvchantype)
    $default  reduce using rule 162 (ntype)


state 580

  132 pexpr_no_paren: '(' expr_or_type ')' '{' start_complit braced_keyval_list . '}'

    '}'  shift, and go to state 625


state 581

  214 constdcl_list: constdcl_list ';' . constdcl1
  278 osemi: ';' .

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 278 (osemi)

    constdcl          go to state 515
    constdcl1         go to state 626
    dcl_name          go to state 148
    sym               go to state 149
    hidden_importsym  go to state 13
    dcl_name_list     go to state 518


state 582

   32 common_dcl: lconst '(' constdcl ';' constdcl_list osemi . ')'

    ')'  shift, and go to state 627


state 583

   41 constdcl: dcl_name_list ntype . '=' expr_list
   44 constdcl1: dcl_name_list ntype .

    '='  shift, and go to state 418

    $default  reduce using rule 44 (constdcl1)


state 584

  137 complitexpr: '{' start_complit braced_keyval_list . '}'

    '}'  shift, and go to state 628


state 585

   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr
  136 complitexpr: expr .

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196

    $default  reduce using rule 136 (complitexpr)


state 586

  135 keyval: expr ':' complitexpr .

    $default  reduce using rule 135 (keyval)


state 587

  273 keyval_list: keyval_list ',' keyval .

    $default  reduce using rule 273 (keyval_list)


state 588

  274 keyval_list: keyval_list ',' complitexpr .

    $default  reduce using rule 274 (keyval_list)


state 589

  120 pseudocall: pexpr '(' expr_or_type_list LDDD ocomma ')' .

    $default  reduce using rule 120 (pseudocall)


state 590

  127 pexpr_no_paren: pexpr '[' oexpr ':' oexpr ']' .

    $default  reduce using rule 127 (pexpr_no_paren)


state 591

   59 compound_stmt: '{' $@3 stmt_list '}' .

    $default  reduce using rule 59 (compound_stmt)


state 592

  317 hidden_type_misc: LCHAN '(' hidden_type_recv_chan ')' .

    $default  reduce using rule 317 (hidden_type_misc)


state 593

  320 hidden_type_func: LFUNC '(' ohidden_funarg_list ')' . ohidden_funres

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '('         shift, and go to state 606
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    $default  reduce using rule 326 (ohidden_funres)

    hidden_importsym       go to state 343
    hidden_type            go to state 607
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347
    ohidden_funres         go to state 629
    hidden_funres          go to state 609


state 594

  324 hidden_interfacedcl: sym '(' . ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 287 (ohidden_funarg_list)

    sym                  go to state 348
    hidden_importsym     go to state 13
    ohidden_funarg_list  go to state 630
    hidden_funarg        go to state 349
    hidden_funarg_list   go to state 464


state 595

  314 hidden_type_misc: LINTERFACE '{' ohidden_interfacedcl_list '}' .

    $default  reduce using rule 314 (hidden_type_misc)


state 596

  342 hidden_interfacedcl_list: hidden_interfacedcl_list ';' . hidden_interfacedcl

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 539
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    sym                    go to state 540
    hidden_importsym       go to state 541
    hidden_type            go to state 543
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347
    hidden_interfacedcl    go to state 631


state 597

  312 hidden_type_misc: LMAP '[' hidden_type ']' . hidden_type

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    hidden_importsym       go to state 343
    hidden_type            go to state 632
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347


state 598

  323 hidden_structdcl: sym hidden_type . oliteral

    LLITERAL  shift, and go to state 393

    $default  reduce using rule 293 (oliteral)

    oliteral  go to state 633


state 599

  313 hidden_type_misc: LSTRUCT '{' ohidden_structdcl_list '}' .

    $default  reduce using rule 313 (hidden_type_misc)


state 600

  340 hidden_structdcl_list: hidden_structdcl_list ';' . hidden_structdcl

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    sym               go to state 547
    hidden_importsym  go to state 13
    hidden_structdcl  go to state 634


state 601

  334 hidden_constant: '(' hidden_literal '+' . hidden_literal ')'

    LLITERAL  shift, and go to state 449
    LNAME     shift, and go to state 9
    '-'       shift, and go to state 450
    '?'       shift, and go to state 10
    '@'       shift, and go to state 11

    sym               go to state 452
    hidden_importsym  go to state 13
    hidden_literal    go to state 635


state 602

  311 hidden_type_misc: '[' LLITERAL ']' hidden_type .

    $default  reduce using rule 311 (hidden_type_misc)


state 603

  298 hidden_import: LCONST hidden_pkg_importsym hidden_type '=' hidden_constant ';' .

    $default  reduce using rule 298 (hidden_import)


state 604

  322 hidden_funarg: sym LDDD hidden_type oliteral .

    $default  reduce using rule 322 (hidden_funarg)


state 605

  199 hidden_fndcl: '(' hidden_funarg_list ')' sym '(' . ohidden_funarg_list ')' ohidden_funres

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 287 (ohidden_funarg_list)

    sym                  go to state 348
    hidden_importsym     go to state 13
    ohidden_funarg_list  go to state 636
    hidden_funarg        go to state 349
    hidden_funarg_list   go to state 464


state 606

  328 hidden_funres: '(' . ohidden_funarg_list ')'

    LNAME  shift, and go to state 9
    '?'    shift, and go to state 10
    '@'    shift, and go to state 11

    $default  reduce using rule 287 (ohidden_funarg_list)

    sym                  go to state 348
    hidden_importsym     go to state 13
    ohidden_funarg_list  go to state 637
    hidden_funarg        go to state 349
    hidden_funarg_list   go to state 464


state 607

  329 hidden_funres: hidden_type .

    $default  reduce using rule 329 (hidden_funres)


state 608

  198 hidden_fndcl: hidden_pkg_importsym '(' ohidden_funarg_list ')' ohidden_funres .

    $default  reduce using rule 198 (hidden_fndcl)


state 609

  327 ohidden_funres: hidden_funres .

    $default  reduce using rule 327 (ohidden_funres)


state 610

   65 loop_body: LBODY $@5 stmt_list '}' .

    $default  reduce using rule 65 (loop_body)


state 611

   68 for_header: osimple_stmt ';' osimple_stmt ';' osimple_stmt .

    $default  reduce using rule 68 (for_header)


state 612

  205 fnres: '(' oarg_type_list_ocomma ')' .

    $default  reduce using rule 205 (fnres)


state 613

  197 fndcl: '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma . ')' fnres

    ')'  shift, and go to state 638


state 614

   81 else: LELSE . if_stmt
   82     | LELSE . compound_stmt

    LIF  shift, and go to state 46
    '{'  shift, and go to state 324

    compound_stmt  go to state 639
    if_stmt        go to state 640


state 615

   79 if_stmt: LIF $@7 if_header $@8 loop_body $@9 else .

    $default  reduce using rule 79 (if_stmt)


state 616

  233 indcl: '(' oarg_type_list_ocomma ')' fnres .

    $default  reduce using rule 233 (indcl)


state 617

   56 case: LCASE expr_or_type_list LCOLAS . expr ':'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 641
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 618

   55 case: LCASE expr_or_type_list '=' . expr ':'

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 55
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 59
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 642
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 84
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 88
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 619

   54 case: LCASE expr_or_type_list ':' .

    $default  reduce using rule 54 (case)


state 620

  270 expr_or_type_list: expr_or_type_list ',' . expr_or_type

    LLITERAL    shift, and go to state 35
    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 157
    '+'         shift, and go to state 56
    '-'         shift, and go to state 57
    '^'         shift, and go to state 58
    '*'         shift, and go to state 158
    '&'         shift, and go to state 60
    '('         shift, and go to state 61
    '!'         shift, and go to state 62
    '~'         shift, and go to state 63
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    expr              go to state 159
    uexpr             go to state 74
    pseudocall        go to state 75
    pexpr_no_paren    go to state 76
    pexpr             go to state 77
    expr_or_type      go to state 528
    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 80
    non_expr_type     go to state 161
    convtype          go to state 82
    comptype          go to state 83
    othertype         go to state 162
    recvchantype      go to state 163
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 164
    fnlitdcl          go to state 89
    fnliteral         go to state 90


state 621

   61 caseblock: case $@4 stmt_list .
  262 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 436

    $default  reduce using rule 61 (caseblock)


state 622

  226 structdcl: '*' '(' embed ')' oliteral .

    $default  reduce using rule 226 (structdcl)


state 623

  225 structdcl: '(' '*' embed ')' oliteral .

    $default  reduce using rule 225 (structdcl)


state 624

   85 switch_stmt: LSWITCH $@10 if_header $@11 LBODY caseblock_list '}' .

    $default  reduce using rule 85 (switch_stmt)


state 625

  132 pexpr_no_paren: '(' expr_or_type ')' '{' start_complit braced_keyval_list '}' .

    $default  reduce using rule 132 (pexpr_no_paren)


state 626

  214 constdcl_list: constdcl_list ';' constdcl1 .

    $default  reduce using rule 214 (constdcl_list)


state 627

   32 common_dcl: lconst '(' constdcl ';' constdcl_list osemi ')' .

    $default  reduce using rule 32 (common_dcl)


state 628

  137 complitexpr: '{' start_complit braced_keyval_list '}' .

    $default  reduce using rule 137 (complitexpr)


state 629

  320 hidden_type_func: LFUNC '(' ohidden_funarg_list ')' ohidden_funres .

    $default  reduce using rule 320 (hidden_type_func)


state 630

  324 hidden_interfacedcl: sym '(' ohidden_funarg_list . ')' ohidden_funres

    ')'  shift, and go to state 643


state 631

  342 hidden_interfacedcl_list: hidden_interfacedcl_list ';' hidden_interfacedcl .

    $default  reduce using rule 342 (hidden_interfacedcl_list)


state 632

  312 hidden_type_misc: LMAP '[' hidden_type ']' hidden_type .

    $default  reduce using rule 312 (hidden_type_misc)


state 633

  323 hidden_structdcl: sym hidden_type oliteral .

    $default  reduce using rule 323 (hidden_structdcl)


state 634

  340 hidden_structdcl_list: hidden_structdcl_list ';' hidden_structdcl .

    $default  reduce using rule 340 (hidden_structdcl_list)


state 635

  334 hidden_constant: '(' hidden_literal '+' hidden_literal . ')'

    ')'  shift, and go to state 644


state 636

  199 hidden_fndcl: '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list . ')' ohidden_funres

    ')'  shift, and go to state 645


state 637

  328 hidden_funres: '(' ohidden_funarg_list . ')'

    ')'  shift, and go to state 646


state 638

  197 fndcl: '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' . fnres

    LCHAN       shift, and go to state 37
    LFUNC       shift, and go to state 111
    LINTERFACE  shift, and go to state 47
    LMAP        shift, and go to state 48
    LNAME       shift, and go to state 9
    LSTRUCT     shift, and go to state 51
    LCOMM       shift, and go to state 223
    '*'         shift, and go to state 113
    '('         shift, and go to state 475
    '['         shift, and go to state 64
    '?'         shift, and go to state 10
    '@'         shift, and go to state 11

    $default  reduce using rule 203 (fnres)

    sym               go to state 115
    hidden_importsym  go to state 13
    name              go to state 116
    fnret_type        go to state 477
    dotname           go to state 478
    othertype         go to state 479
    ptrtype           go to state 480
    recvchantype      go to state 481
    structtype        go to state 85
    interfacetype     go to state 86
    fntype            go to state 482
    fnres             go to state 647


state 639

   82 else: LELSE compound_stmt .

    $default  reduce using rule 82 (else)


state 640

   81 else: LELSE if_stmt .

    $default  reduce using rule 81 (else)


state 641

   56 case: LCASE expr_or_type_list LCOLAS expr . ':'
   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196
    ':'      shift, and go to state 648


state 642

   55 case: LCASE expr_or_type_list '=' expr . ':'
   89 expr: expr . LOROR expr
   90     | expr . LANDAND expr
   91     | expr . LEQ expr
   92     | expr . LNE expr
   93     | expr . LLT expr
   94     | expr . LLE expr
   95     | expr . LGE expr
   96     | expr . LGT expr
   97     | expr . '+' expr
   98     | expr . '-' expr
   99     | expr . '|' expr
  100     | expr . '^' expr
  101     | expr . '*' expr
  102     | expr . '/' expr
  103     | expr . '%' expr
  104     | expr . '&' expr
  105     | expr . LANDNOT expr
  106     | expr . LLSH expr
  107     | expr . LRSH expr
  108     | expr . LCOMM expr

    LANDAND  shift, and go to state 175
    LANDNOT  shift, and go to state 176
    LCOMM    shift, and go to state 177
    LEQ      shift, and go to state 179
    LGE      shift, and go to state 180
    LGT      shift, and go to state 181
    LLE      shift, and go to state 183
    LLSH     shift, and go to state 184
    LLT      shift, and go to state 185
    LNE      shift, and go to state 186
    LOROR    shift, and go to state 187
    LRSH     shift, and go to state 188
    '+'      shift, and go to state 189
    '-'      shift, and go to state 190
    '|'      shift, and go to state 191
    '^'      shift, and go to state 192
    '*'      shift, and go to state 193
    '/'      shift, and go to state 194
    '%'      shift, and go to state 195
    '&'      shift, and go to state 196
    ':'      shift, and go to state 649


state 643

  324 hidden_interfacedcl: sym '(' ohidden_funarg_list ')' . ohidden_funres

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '('         shift, and go to state 606
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    $default  reduce using rule 326 (ohidden_funres)

    hidden_importsym       go to state 343
    hidden_type            go to state 607
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347
    ohidden_funres         go to state 650
    hidden_funres          go to state 609


state 644

  334 hidden_constant: '(' hidden_literal '+' hidden_literal ')' .

    $default  reduce using rule 334 (hidden_constant)


state 645

  199 hidden_fndcl: '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' . ohidden_funres

    LCHAN       shift, and go to state 333
    LFUNC       shift, and go to state 334
    LINTERFACE  shift, and go to state 335
    LMAP        shift, and go to state 336
    LNAME       shift, and go to state 337
    LSTRUCT     shift, and go to state 338
    LCOMM       shift, and go to state 339
    '*'         shift, and go to state 340
    '('         shift, and go to state 606
    '['         shift, and go to state 342
    '@'         shift, and go to state 11

    $default  reduce using rule 326 (ohidden_funres)

    hidden_importsym       go to state 343
    hidden_type            go to state 607
    hidden_type_misc       go to state 345
    hidden_type_recv_chan  go to state 346
    hidden_type_func       go to state 347
    ohidden_funres         go to state 651
    hidden_funres          go to state 609


state 646

  328 hidden_funres: '(' ohidden_funarg_list ')' .

    $default  reduce using rule 328 (hidden_funres)


state 647

  197 fndcl: '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres .

    $default  reduce using rule 197 (fndcl)


state 648

   56 case: LCASE expr_or_type_list LCOLAS expr ':' .

    $default  reduce using rule 56 (case)


state 649

   55 case: LCASE expr_or_type_list '=' expr ':' .

    $default  reduce using rule 55 (case)


state 650

  324 hidden_interfacedcl: sym '(' ohidden_funarg_list ')' ohidden_funres .

    $default  reduce using rule 324 (hidden_interfacedcl)


state 651

  199 hidden_fndcl: '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres .

    $default  reduce using rule 199 (hidden_fndcl)
